openapi: 3.0.1
info:
  title: Greenly
  description: "Versão preliminar do API REST Greenly. \n Saiba mais sobre o nosso\
    \ serviço em https://greenly.pt\nVeja esta documentação de forma mais cómoda em\
    \ https://bump.sh/doc/greenly"
  termsOfService: http://greenly.pt/terms/
  contact:
    email: support@greenly.pt
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.5
servers:
- url: https://greenly.pt/api
- url: http://greenly.pt/api
tags:
- name: auth
  description: Operações de autenticação
- name: user
  description: Operações sobre utilizadores
- name: transporter
  description: Operações orientadas a transportadores
- name: supplier
  description: Operações orientadas a fornecedores
- name: store
  description: Operações orientadas à loja
paths:
  ### AUTHENTICATION ROUTES
  /auth/login:
    post:
      tags:
      - auth
      summary: Autenticação do utilizador para pedidos subsequentes
      description: Obter _token_ JWT que permite autenticação em pedidos subsequentes
        quando incluido
      operationId: localLogin
      requestBody:
        description: Requer o envío de credenciais de utilizador válidas
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SentAuthenticationData'
        required: true
      responses:
        200:
          description: Autenticação efectuada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceivedToken'
        401:
          description: Autenticação sem sucesso. Poderá dar-se devido a um e-mail
            não registado ou a uma palavra-passe incorreta para o utilizador associado
            a o e-mail especificado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalAuthenticationError'
      x-codegen-request-body-name: body
  /auth/status:
    get:
      tags:
      - auth
      summary: Obtenção do estado atual de autenticação de um utilizador
      description: Permite descobrir se o _token_ JWT possuido pelo utilizador é atualmente válido
      operationId: checkAuthStatus
      responses:
        200:
          description: _Token_ válido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidStatusConfirmation'
        401:
          description: _Token_ inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'

  # USER ROUTES
  /user:
    get:
      tags:
      - user
      summary: Obter informação de todos os utilizadores
      description: Operação limitada a administradores
      operationId: getUsers
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceivedUser'
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
      security:
        - bearerAuth: []
    post:
      tags:
      - user
      summary: Criar utilizador
      operationId: createUser
      requestBody:
        description: |- 
                      Informação correspondente ao utilizador a criar.
                      
                      No caso da criação de um novo consumidor ou administrador (i.e. _type_ é 'CONSUMER' ou 'ADMINISTRATOR'):
                      * Apenas os campos _email_, _first_name_, _last_name_, _password_ e _type_ são absolutamente necessários

                      No caso da criação de um fornecedor ou transportador (i.e. _type_ é 'SUPPLIER' ou 'TRANSPORTER'):
                      * São necessários os mesmos campos que o consumidor, bem como informação adicional sobre a empresa (_company.name_ e _company.email_)

                      Notas:
                      * Qualquer outro campo não-essencial (_phone_, _company.bio_) poderá ser incluido, ou posteriormente preenchido através de [PUT /user/{userId}]().
                      * É possível atualizar qualquer atributo de um utilizador posteriormente, à excepção de _type_.
                      * Apenas um admninistrador autenticado pode criar novos administradores. Para qualquer outro tipo de utilizador não é necessária autenticação.

        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SentUser'
        required: true
      responses:
        201:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceivedID'
        400:
          description: Dados inválidos
          content: {}
        403:
          description: Utilizador não autorizado (ao tentar criar um novo administrador sem ter permissões de administrador)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
      x-codegen-request-body-name: body
      security:
        - bearerAuth: []

      
  /user/{userId}:
    get:
      tags:
      - user
      summary: Obter utilizador pelo respetivo userId
      description: A informação devolvida depende do nível de permissões do utilizador
        que faz o pedido
      operationId: getUserByName
      parameters:
      - name: userId
        in: path
        description: userId do utilizador cuja informação se deseja obter
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceivedUser'
        400:
          description: userId inválido
          content: {}
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
        404:
          description: Utilizador não encontrado
          content: {}
      security:
        - bearerAuth: []
      
    put:
      tags:
      - user
      summary: Atualizar utilizador
      description: Apenas pode ser feito pelo utilizador quando autenticado (ou por
        um administrador)
      operationId: updateUser
      parameters:
      - name: userId
        in: path
        description: userId do utilizador cuja informação se deseja atualizar
        required: true
        schema:
          type: integer
      requestBody:
        description: |-
          Atualiza o objeto User. Requere-se apenas que sejam enviados os parâmetros que seram alterados. (e.g. enviar um valor no parâmetro e-mail causará a sua atualização.
          
          No caso de atualização de password, deverão ser incluidos os parâmetros 'old_password', representativo da password atual do respetivo utilizador, e 'new_password', representativo do novo valor da password. 
          * Caso o valor do parâmetro 'old_password' não corresponda à atual password do utilizador, o pedido não será concluido.

        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateUser'
        required: true
      responses:
        204:
          description: Utilizador atualizado com sucesso
          content: {}
        400:
          description: Dados inválidos
          content: {}
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
        404:
          description: Utilizador não encontrado
          content: {}
        409:
          description: Valor unico fornecido está em conflito com valores de outros
            utilizadores (i.e. e-mail)
          content: {}
      security:
        - bearerAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - user
      summary: Apagar utilizador
      description: Apenas pode ser feito pelo utilizador quando autenticado (ou por
        um administrador)
      operationId: deleteUser
      parameters:
      - name: userId
        in: path
        description: userId do utilizador que será removido
        required: true
        schema:
          type: integer
      responses:
        204:
          description: Utilizador removido com sucesso
          content: {}
        400:
          description: userId inválido
          content: {}
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
        404:
          description: Utilizador não encontrado
          content: {}
      security:
        - bearerAuth: []
  ## ADDRESS ROUTES
  /user/{userId}/addresses:
    post:
      tags:
        - user
      summary: Adicionar nova morada à coleção de moradas do utilizador
      description: Apenas pode ser feito pelo utilizador quando autenticado (ou por
        um administrador)
      operationId: createAddress
      parameters:
      - name: userId
        in: path
        description: userId do utilizador ao qual pertencerá a nova morada
        required: true
        schema:
          type: integer
      requestBody:
        description: |-
          Representa uma nova morada.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SentAddress'
        required: true
      responses:
        201:
          description: Morada criada com sucesso
          content: 
            application/json:
              schema: 
                properties:
                  id:
                    type: integer
                    description: "Código identificador da nova morada"

        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
      security:
        - bearerAuth: []


  /user/{userId}/addresses/{addressId}:
    put:
      tags:
        - user
      summary: Atualizar uma morada do utilizador
      description: Apenas pode ser feito pelo utilizador quando autenticado (ou por
        um administrador)
      operationId: updateAddress
      parameters:
      - name: userId
        in: path
        description: userId do utilizador ao qual pertence a morada a alterar
        required: true
        schema:
          type: integer
      - name: addressId
        in: path
        description: addressId da morada a alterar
        required: true
        schema:
          type: integer
      requestBody:
        description: |-
          Representa as atualizações a aplicar à morada em questão.

          Apenas é necessário incluir os atributos que se desejam alterar. (e.g. se for só para alterar a rua, envia-se apenas o atributo _street_ e o respetivo valor).

          Caso se deseje tornar uma morada a principal para envio ou faturação, definindo _is_shipping_ ou _is_billing_ como _true_, qualquer outra morada será alterada, tal que, respetivamente, o seu campo _is_shipping_ ou _is_billing_ seja _false_.

          Na eventualidade de serem atualizados campos correspondentes à localização da morada (i.e. _street_, _city_, _country_ ou _postal_code_), a latitude e longitude da morada serão recalculadas.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAddress'
      responses:
        201:
          description: Morada atualizada com sucesso
          content: 
            application/json:
              schema: 
                properties:
                  message:
                    type: string
                    enum:
                    - "Address updated succcessfully"
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
      security:
        - bearerAuth: []

    delete:
      tags:
        - user
      summary: Apagar uma morada do utilizador
      description: Apenas pode ser feito pelo utilizador quando autenticado (ou por
        um administrador)
      operationId: deleteAddress
      parameters:
      - name: userId
        in: path
        description: userId do utilizador ao qual pertence a morada a apagar
        required: true
        schema:
          type: integer
      - name: addressId
        in: path
        description: addressId da morada a apagar
        required: true
        schema:
          type: integer
      responses:
        201:
          description: Morada apagada com sucesso
          content: 
            application/json:
              schema: 
                properties:
                  message:
                    type: string
                    enum:
                    - "Address deleted succcessfully"
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
      security:
        - bearerAuth: []

  ## NOTIFICATION ROUTES

  /user/{userId}/notifications:
    get:
      tags:
      - user
      summary: Obter notificações do utilizador userId
      description: Devolve um array de notificações relativas às várias encomendas do utilizador
      operationId: getUserNotifications
      parameters:
      - name: userId
        in: path
        description: userId do utilizador cuja lista de notificações se deseja obter
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
      security:
        - bearerAuth: []
    put:
      tags:
      - user
      summary: Descartar todas as notificações
      description: Permite descartar/ler todas as notificações ao mesmo tempo
      operationId: dismissAllNotifications
      parameters:
      - name: userId
        in: path
        description: userId do utilizador cujas notificações se deseja descartar
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
      security:
        - bearerAuth: []
  /user/{userId}/notifications/{notificationId}:
    put:
      tags:
      - user
      summary: Descartar uma notificação
      description: Permite descartar/ler uma notificação específica
      operationId: dismissSingleNotification
      parameters:
      - name: userId
        in: path
        description: userId do utilizador cuja notificação se deseja descartar
        required: true
        schema:
          type: integer
      - name: notificationId
        in: path
        description: código identificador da notificação do utilizador que se deseja descartar
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
      security:
        - bearerAuth: []

  ## ORDER ROUTES
  /user/{userId}/orders:
    get:
      tags:
      - user
      summary: Obter encomendas do utilizador userId
      description: "Devolve um array de encomendas associadas ao utilizador userId,\
        \ independentemente do seu tipo \n Apenas pode ser feito pelo utilizador quando\
        \ autenticado (ou por um administrador)"
      operationId: getUserOrders
      parameters:
      - name: userId
        in: path
        description: userId do utilizador cuja lista de encomendas se deseja obter
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReceivedOrder'
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
      security:
        - bearerAuth: []
    post:
      tags:
      - user
      summary: Criar encomenda
      description: "Criação de uma encomenda com base na combinação de produtos/fornecedores/transportadores presente no carrinho. Apenas pode ser feito pelo utilizador quando autenticado \nDeve\
        \ corresponder a um utilizador do tipo consumer."
      operationId: createOrder
      parameters:
      - name: userId
        in: path
        description: userId do utilizador a criar encomenda
        required: true
        schema:
          type: integer
      requestBody:
        description: Cria um objeto Order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SentOrder'
        required: true
      responses:
        200:
          description: Operação efetuada com sucesso
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
        400:
          description: Poderá corresponder a vários erros (moradas inválida, stock indisponível)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                    - Your cart is empty. You can add items to it by using the cart manipulation endpoints.
                    - Invalid shipping destination. Make sure to use an address registered to your account.
                    - Invalid billing address. Make sure to use an address registered to your account.
                    - Some items included in your cart are no longer available in the quantities you requested. Please double-check your cart.
      security:
        - bearerAuth: []
  ## WISHLIST ROUTES
  /user/{userId}/wishlist:
    get:
      tags:
      - user
      summary: Obter items na wishlist
      description: |-
        Obter items que estão na wishlist do utilizador userId.
        Limita-se a consumidores autenticados.
      operationId: getWishlist
      parameters:
      - name: userId
        in: path
        description: userId do utilizador cuja wishlist se deseja obter
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceivedWishlist'
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
      security:
        - bearerAuth: []
    post:
      tags:
      - user
      summary: Adicionar produto à wishlist
      description: |-
          Adicionar produto à wishlist do utilizador userId.
          Limita-se a utilizadores autenticados.
      operationId: addToWishlist
      parameters:
      - name: userId
        in: path
        description: userId do utilizador associado à wishlist à qual será
          adicionado um produto
        required: true
        schema:
          type: integer
      requestBody:
        description: Informação do produto a adicionar ao carrinho, deverá corresponder a um produto existente
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: integer
                  description: O código identificador do produto a adicionar à wishlist
        required: true
      responses:
        201:
          description: Operação efetuada com sucesso
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
        404:
          description: Produto mencionado não existe
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                    - The specified product does not exist.
        409:
          description: Produto já presente na wishlist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                    - Specified product is already in wishlist.

      security:
        - bearerAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - user
      summary: Limpar todos os produtos da wishlist
      description: |-
        Permite retirar todos os produtos que estão na wishlist do utilizador userId. 
        Limita-se a consumidores autenticados.
      operationId: clearWishlist
      parameters:
      - name: userId
        in: path
        description: userId do utilizador cuja wishlist se deseja limpar
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
      security:
        - bearerAuth: []

  /user/{userId}/cart/{productId}:
    delete:
      tags:
      - user
      summary: Remover produto específico da wishlist
      description: |-
        Remover produto correspondente ao código identificador fornecido da wishlist do utilizador userId. 
        Limita-se a consumidores autenticados.
      operationId: removeProductFromWishlist
      parameters:
      - name: userId
        in: path
        description: userId do utilizador associado à wishlist
        required: true
        schema:
          type: integer
      - name: productId
        in: path
        description: |-
          Código identificador do produto a remover da wishlist. 
          Deve corresponder a um produto atualmente na wishlist do utilizador.
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
        404:
          description: productId inválido
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                    - Specified product is not in wishlist.
      security:
        - bearerAuth: []
  ## CART ROUTES
  /user/{userId}/cart:
    get:
      tags:
      - user
      summary: Obter items no cesto de compras
      description: "Obter items que estão no cesto de compras do utilizador userId\
        \ \nLimita-se a utilizadores autenticados, o funcionamento para utilizadores\
        \ não autenticados é session-based"
      operationId: getCart
      parameters:
      - name: userId
        in: path
        description: userId do utilizador cujo cesto de compras se deseja obter
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceivedCart'
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
      security:
        - bearerAuth: []
    post:
      tags:
      - user
      summary: Adicionar item ao cesto de compras
      description: "Adicionar item ao cesto de compras do\
        \ utilizador userId\n A quantidade deverá ser menor ou igual que o stock atual\
        \ do produto. \nLimita-se a utilizadores autenticados, o funcionamento para\
        \ utilizadores não autenticados é session-based"
      operationId: addToCart
      parameters:
      - name: userId
        in: path
        description: userId do utilizador associado ao cesto de compras ao qual será
          adicionado um produto
        required: true
        schema:
          type: integer
      requestBody:
        description: Informação do item a adicionar ao carrinho
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SentCartItem'
        required: true
      responses:
        201:
          description: Operação efetuada com sucesso
        400:
          description: Parâmetros inválidos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                    - "Requested quantity is higher than available stock."
                    - "Specified item is already in cart."
                    - "Requested quantity is higher than available stock."
                    - "Minimum quantity is 1."

        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
      security:
        - bearerAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - user
      summary: Limpar todos os items no cesto de compras
      description: "Permite retirar todos os items que estão no cesto de compras do\
        \ utilizador userId \nLimita-se a utilizadores autenticados, o funcionamento\
        \ para utilizadores não autenticados é session-based"
      operationId: clearCart
      parameters:
      - name: userId
        in: path
        description: userId do utilizador cujo cesto de compras se deseja limpar
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
      security:
        - bearerAuth: []

  /user/{userId}/cart/{index}:
    put:
      tags:
      - user
      summary: Atualizar a quantidade de um item no carrinho
      description: "Permite alterar a quantidade de um item que se quer no carrinho. Este parâmetro tem um mínimo de 1, estando limitado ao stock atual do fornecedor em questão."
      operationId: updateItemInCart
      parameters:
      - name: userId
        in: path
        description: userId do utilizador associado ao cesto de compras
        required: true
        schema:
          type: integer
      - name: itemId
        in: path
        description: |-
          Indíce do item a remover do cesto de compras. Deve corresponder a um item atualmente no cesto de compras do utilizador."
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
        404:
          description: index inválido
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                    - Specified index is not valid. Check the content of your cart for updated indexes.
      security:
        - bearerAuth: []

    delete:
      tags:
      - user
      summary: Remover item do cesto de compras
      description: |-
        Remover item correspondente ao índice fornecido do cesto de compras do utilizador userId. 
        Limita-se a utilizadores autenticados, o funcionamento para utilizadores não autenticados é session-based."
      operationId: removeItemFromCart
      parameters:
      - name: userId
        in: path
        description: userId do utilizador associado ao cesto de compras
        required: true
        schema:
          type: integer
      - name: index
        in: path
        description: |-
          Índice do item a remover do cesto de compras. 
          Deve corresponder a um item atualmente no cesto de compras do utilizador.
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
        404:
          description: index inválido
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                    - Specified index is not valid. Check the content of your cart for updated indexes.
      security:
        - bearerAuth: []
  ### STORE ROUTES
  ## PRODUCT ROUTES
  /store/products:
    get:
      tags:
      - store
      summary: Obter todos os produtos na loja
      description: Devolve informação sobre todos os produtos na loja
      operationId: getProducts
      parameters:
      - name: sort
        in: query
        description: Ordem aplicada ao resultado devolvido
        schema:
          type: string
          enum:
          - price_asc
          - price_desc
          - name_desc
          - newest
          - oldest
      - name: limit
        in: query
        description: Limite de produtos a devolver
        schema:
          type: integer
      - name: page
        in: query
        description: Página de produtos a devolver
        schema:
          type: integer
      - name: category
        in: query
        description: Identificador da categoria de produtos a devolver
        schema:
          type: integer
      - name: keywords
        in: query
        description: Palavas-chave a incluir na pesquisa
        schema:
          type: array
          items:
            type: string
      - name: min_price
        in: query
        description: Preço mínimo dos produtos a apresentar
        required: false 
        schema:
          type: number
          format: float
      - name: max_price
        in: query
        description: Preço máximo dos produtos a apresentar
        required: false
        schema:
          type: number
          format: float
      - name: supplier
        in: query
        description: Código identificador do fornecedor dos produtos a apresentar
        required: false
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
        400:
          description: Argumentos inválidos
    post:
      tags:
      - store
      summary: Criar produto
      description: "Criar um novo produto, disponibilizando a sua comercialização\
        \ por parte de fornecedores \nOperação limitada a administradores"
      operationId: createProduct
      requestBody:
        description: Cria um objeto Product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SentProduct'
        required: true
      responses:
        201:
          description: Operação efetuada com sucesso
          content: {}
        400:
          description: Dados inválidos
          content: {}
        409:
          description: O produto já existe
          content: {}
      x-codegen-request-body-name: body
  /store/products/{productId}:
    get:
      tags:
      - store
      summary: Obter produto pelo respetivo productId
      description: Devolve um objeto Product
      operationId: getProductById
      parameters:
      - name: productId
        in: path
        description: productId do produto cuja informação se deseja obter
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleProduct'
        400:
          description: productId inválido
          content: {}
        404:
          description: Produto não encontrado
          content: {}
    put:
      tags:
      - store
      summary: Atualizar produto
      description: "Altera os detalhes de um produto \nOperação limitada a administradores"
      operationId: updateProduct
      parameters:
      - name: productId
        in: path
        description: productId do produto cuja informação se deseja atualizar
        required: true
        schema:
          type: integer
      requestBody:
        description: Atualiza o objeto Product
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SentProduct'
        required: true
      responses:
        204:
          description: Produto atualizado com sucesso
          content: {}
        400:
          description: productId inválido
          content: {}
        401:
          description: Utilizador não autorizado
          content: {}
        404:
          description: Produto não encontrado
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - store
      summary: Apagar produto
      description: "Remove um produto da loja \nOperação limitada a administradores"
      operationId: deleteProduct
      parameters:
      - name: productId
        in: path
        description: productId do produto que será removido
        required: true
        schema:
          type: integer
      responses:
        204:
          description: Produto removido com sucesso
          content: {}
        400:
          description: productId inválido
          content: {}
        401:
          description: Utilizador não autorizado
          content: {}
        404:
          description: Produto não encontrado
          content: {}
  ## Category Routes
  /store/categories:
    get:
      tags:
      - store
      summary: Obter todas as categorias de produtos
      description: "Devolve informação sobre todas as categorias de produtos existentes"
      operationId: getCategories
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReceivedCategory'
    post:
      tags:
      - store
      summary: Criar uma nova categoria de produtos
      description: "Permite criar uma nova categoria (operação limitada a administradores)"
      operationId: createCategory
      requestBody:
        description: "Informação correspondente à nova categoria a criar. Requer o nome da mesma e o código identificador da categoria mãe (opcional)"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SentCategory'
      responses:
        201:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    description: Código identificador da nova categoria
        400:
          description: Informação fornecida é inválida. (e.g. parent_category inválida)
          content: {}
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
      security:
        - bearerAuth: []
      
  /store/categories/{categoryId}:
    put:
      tags:
      - store
      summary: Atualizar uma categoria específica pelo respetivo categoryId
      description: "Devolve uma mensagem de sucesso relativa à atualização da informação a categoria (operação limitada a administradores)"
      operationId: updateCategory
      parameters:
      - name: categoryId
        in: path
        description: categoryId da categoria cuja informação se deseja atualizar
        required: true
        schema:
          type: integer
      requestBody:
        description: Atualiza o objeto Category, apenas os campos que se deseja atualizar têm que ser incluidos.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SentCategory'
        required: true
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    enum:
                    - "Category updated succcessfully"
        400:
          description: Informação fornecida é inválida. (e.g. parent_category inválida)
          content: {}
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
      security:
        - bearerAuth: []
    delete:
      tags:
        - store
      summary: Apagar uma categoria de produtos
      description: Permite apagar uma categoria de produtos, desde que esta não tenha produtos ou sub-categorias associadas (operação limitada a administradores)
      operationId: deleteCategory
      parameters:
      - name: categoryId
        in: path
        description: categoryId da categoria que se pretende apagar
        required: true
        schema:
          type: integer
      responses:
        201:
          description: Categoria apagada com sucesso
          content: 
            application/json:
              schema: 
                properties:
                  message:
                    type: string
                    enum:
                    - "Category deleted succcessfully"
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
        409:
          description: Categoria não pode ser apagada pois tem sub-categorias ou produtos associados
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    enum:
                    - "Category can't be deleted, includes products or sub-categories."
          
      security:
        - bearerAuth: []
  ## Supplier information route
  /store/suppliers:
    get:
      tags:
      - store
      summary: Obter informação sobre todos os fornecedores registados na plataforma.
      description: |-
        Permite obter informação básica sobre todos os fornecedores, bem como a quantidade de produtos que estes fornecem.

        Operação limitada a utilizadores autenticados.
      operationId: getAllSuppliers
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceivedSuppliers'


  ## ORDER ROUTES
  /store/orders:
    get:
      tags:
      - store
      summary: Obter encomendas
      description: "Devolve informação dinâmica sobre todas as encomendas relativas ao utilizador de onde originou o pedido. Diferentes utilizadores irão ver diferentes encomendas. Fornecedores e transportadores apenas verão encomendas onde estão registados como fornecedor ou transportador, administradores têm acesso a todas as encomendas."
      operationId: getOrders
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReceivedOrder'
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
      security:
        - bearerAuth: []
  /store/orders/{orderId}:
    get:
      tags:
      - store
      summary: Obter encomenda específica pelo respetivo orderId
      description: "Permitido apenas a utilizadores que estão relacionados de alguma forma com a encomenda (fornecem ou transportam algum produto). Irá devolver informação relativa apenas ao utilizador que efetua o pedido. Administradores têm acesso a todas as encomendas."
      operationId: getOrderById
      parameters:
      - name: orderId
        in: path
        description: orderId da encomenda cuja informação se deseja obter
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReceivedOrder'
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
        404:
          description: Encomenda não encontrada
          content:
            application/json:
              schema:
                properties:
                  message:  
                    type: string
                    enum:
                    - "The specified order identifier is invalid."
      security:
        - bearerAuth: []

  /store/orders/{orderId}/{itemId}:
    put:
      tags:
      - store
      summary: Atualizar item dentro de encomenda
      description: |- 
        Permite a alteração do estado de um item dentro da encomenda.

        Esta operação tem permissões dinâmicas, sendo permitida apenas a utilizadores que estejam relacionados de alguma forma com a encomenda, permitindo apenas acesso ao conjunto de itens que lhes dizem respeito.

        Consumidores podem alterar o item para o estado "CANCELED" caso este ainda não esteja no estado "IN_TRANSIT".

        Administradores podem alterar o item para o estado "CANCELED" a qualquer altura.

        Fornecedores podem alterar o item para do estado "PROCESSING" para o estado "AWAITING_TRANSPORT", ou para o estado "CANCELED", em caso de rotura de stock.

        Transportadores podem alterar o item, a partir do estado "AWAITING_TRANSPORT", para os seguintes estados:
        - "TRANSPORT_IMMINENT", simbolizando a chegada iminente do veículo de transporte ao armazém do fornecedor.
        - "IN_TRANSIT", simbolizando o levantamento da encomenda e inicio do transporte até ao destino.
        - "LAST_MILE", simbolizando a chegada iminente do veículo de transporte à morada de destino.
        - "COMPLETED", simbolizando a entrega da encomenda.

        Adicionalmente, transportadores podem também alterar estado da encomenda para "FAILURE" em caso de acidente durante o transporte ou falha de entrega em mão ao consumidor.

        Cada alteração de estado feita através desta rota desencadeia tipos de notificações diferentes, a entidades diferentes.

      operationId: updateOrder
      parameters:
      - name: orderId
        in: path
        description: orderId da encomenda a ser atualizada
        required: true
        schema:
          type: integer
      - name: itemId
        in: path
        description: itemId do item a ser atualizado, dentro da encomenda
        required: true
        schema:
          type: integer
      requestBody:
        description: Atualiza o estado do item em questão
        content:
          application/json:
            schema:
              properties:
                status:
                  $ref: '#/components/schemas/OrderStatus'
        required: true
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReceivedOrder'
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
        400:
          description: Problemas de várias causas
          content:
            application/json:
              schema:
                properties:
                  message:  
                    type: string
                    enum:
                    - You don't have permission to change the item's status from its current status to the specified status.
                    - "You can't change this item's status since this item has not yet been paid for."
                    - The status of this order item cannot be changed since it has already been canceled.
                    - The specified order item is already passed the specified status. Please specifiy a status ahead of the current status.

        404:
          description: Item não encontrado
          content:
            application/json:
              schema:
                properties:
                  message:  
                    type: string
                    enum:
                    - "The specified item identifier is invalid for the specified order."
      security:
        - bearerAuth: []
  ### TRANSPORTER ROUTES
  /transporter/{userId}/vehicles:
    get:
      tags:
      - transporter
      summary: Obter veículos associados ao transportador userId
      description: "Devolve um array de objetos Vehicle, conforme os veículos registados\
        \ pelo transportador userId \nApenas pode ser feito pelo transportador quando\
        \ autenticado, ou por um administrador"
      operationId: getTransporterVehicles
      parameters:
      - name: userId
        in: path
        description: "userId do utilizador cujos veículos se deseja obter \nDeve corresponder\
          \ a um utilizador do tipo transporter"
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        400:
          description: userId inválido
          content: {}
        404:
          description: Utilizador não encontrado
          content: {}
    post:
      tags:
      - transporter
      summary: Adicionar um novo veículo à coleção do transportador
      description: Apenas pode ser feito pelo transportador userId quando autenticado
      operationId: addVehicle
      parameters:
      - name: userId
        in: path
        description: "userId do utilizador a registar o veículo \nDeve corresponder\
          \ a um utilizador do tipo transporter"
        required: true
        schema:
          type: integer
      requestBody:
        description: Cria um objeto Product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
        required: true
      responses:
        201:
          description: Operação efetuada com sucesso
          content: {}
        400:
          description: Dados inválidos
          content: {}
        401:
          description: Utilizador não autorizado
          content: {}
        409:
          description: O produto já existe
          content: {}
      x-codegen-request-body-name: body
  /transporter/{userId}/vehicles/{vehicleId}:
    get:
      tags:
      - transporter
      summary: Obter um veículo específico associado ao transportador usedId
      description: "Devolve um objeto Vehicle, registado pelo transportador userId\
        \ \nApenas pode ser feito pelo transportador quando autenticado, ou por um\
        \ administrador"
      operationId: getTransporterVehicleById
      parameters:
      - name: userId
        in: path
        description: "userId do utilizador que registou o veículo \nDeve corresponder\
          \ a um utilizador do tipo transporter"
        required: true
        schema:
          type: integer
      - name: vehicleId
        in: path
        description: "vehicleId do veículo \nDeve corresponder a um veículo pertencente\
          \ à frota do transportador"
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        400:
          description: userId ou vehicleId inválidos
          content: {}
        404:
          description: Utilizador ou veículo não encontrados
          content: {}
    put:
      tags:
      - transporter
      summary: Atualizar veículo
      description: "Permite alterar detalhes de úm veículo já registado \nApenas pode\
        \ ser feito pelo transportador userId quando autenticado"
      operationId: updateVehicle
      parameters:
      - name: userId
        in: path
        description: "userId do utilizador que registou o veículo \nDeve corresponder\
          \ a um utilizador do tipo transporter"
        required: true
        schema:
          type: integer
      - name: vehicleId
        in: path
        description: "vehicleId do veículo a atualizar \nDeve corresponder a um veí\
          culo pertencente à frota do transportador"
        required: true
        schema:
          type: integer
      requestBody:
        description: Atualiza o objeto Vehicle
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Vehicle'
        required: true
      responses:
        204:
          description: Veículo atualizado com sucesso
          content: {}
        400:
          description: userId ou vehicleId inválidos
          content: {}
        401:
          description: Utilizador não autorizado
          content: {}
        404:
          description: Utilizador ou veículo não encontrados
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - transporter
      summary: Apagar veículo
      description: "Permite apagar um veículo, removendo-o da frota do transportador\
        \ \nApenas pode ser feito pelo transportador userId quando autenticado"
      operationId: deleteVehicle
      parameters:
      - name: userId
        in: path
        description: "userId do utilizador que registou o veículo \nDeve corresponder\
          \ a um utilizador do tipo transporter"
        required: true
        schema:
          type: integer
      - name: vehicleId
        in: path
        description: "vehicleId do veículo a remover \nDeve corresponder a um veí\
          culo pertencente à frota do transportador"
        required: true
        schema:
          type: integer
      responses:
        204:
          description: Veículo removido com sucesso
          content: {}
        400:
          description: userId ou vehicleId inválidos
          content: {}
        401:
          description: Utilizador não autorizado
          content: {}
        404:
          description: Utilizador ou veículo não encontrados
          content: {}
  ## DISTRIBUTION CENTER ROUTES
  /transporter/{userId}/centers:
    get:
      tags:
      - transporter
      summary: Obter centros de distribuição associados ao transportador userId
      description: "Devolve um array de objetos DistributionCenter, conforme os centros\
        \ de distribuição registados pelo transportador userId \nApenas pode ser feito\
        \ pelo transportador quando autenticado, ou por um administrador"
      operationId: getDistributionCenters
      parameters:
      - name: userId
        in: path
        description: userId do transportador cujos centros de distribuição se deseja
          obter
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributionCenter'
        400:
          description: userId inválido
          content: {}
        404:
          description: Utilizador não encontrado
          content: {}
    post:
      tags:
      - transporter
      summary: Adicionar centro de distribuição
      description: "Adiciona um novo objeto DistributionCenter ao conjunto de centro\
        \ de distribuição do transportador \nApenas pode ser feito pelo transportador\
        \ quando autenticado, ou por um administrador"
      operationId: addDistributionCenter
      parameters:
      - name: userId
        in: path
        description: userId do transportador ao qual se vai adicionar um novo centro
          de distribuição
        required: true
        schema:
          type: integer
      requestBody:
        description: Cria um objeto DistributionCenter, adicionando-o à coleção de
          centros de distribuição do transportador
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributionCenter'
        required: true
      responses:
        201:
          description: Operação efetuada com sucesso
          content: {}
        400:
          description: Dados inválidos
          content: {}
        401:
          description: Utilizador não autorizado
          content: {}
      x-codegen-request-body-name: body
  /transporter/{userId}/centers/{centerId}:
    get:
      tags:
      - transporter
      summary: Obter informação sobre um centro de distribuição centerId do transportador
        userId
      description: "Devolve um objeto DistributionCenter \nApenas pode ser feito pelo\
        \ transportador quando autenticado, ou por um administrador"
      operationId: getCenterById
      parameters:
      - name: userId
        in: path
        description: "userId do utilizador cuja informação se deseja saber \nDeve\
          \ corresponder a um utilizador do tipo transporter"
        required: true
        schema:
          type: integer
      - name: centerId
        in: path
        description: "centerId do centro de distribuição cuja informação se deseja\
          \ saber \nDeve corresponder a um centro de distribuição associado ao utilizador\
          \ userId"
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributionCenter'
        400:
          description: userId ou centerId inválidos
          content: {}
        404:
          description: Utilizador ou centro de distribuição não encontrados
          content: {}
    put:
      tags:
      - transporter
      summary: Atualizar centro de distribuição
      description: "Permite atualizar um centro de distribuição centerId associado\
        \ ao transportador \nApenas pode ser feito pelo transportador userId quando\
        \ autenticado"
      operationId: updateDistributionCenter
      parameters:
      - name: userId
        in: path
        description: "userId do utilizador associado ao centro de distribuição \n\
          Deve corresponder a um utilizador do tipo transporter"
        required: true
        schema:
          type: integer
      - name: centerId
        in: path
        description: "centerId do centro de distribuição a ser atualizado \nDeve corresponder\
          \ a um centro de distribuição associado ao utilizador userId"
        required: true
        schema:
          type: integer
      requestBody:
        description: Atualiza o objeto DistributionCenter
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DistributionCenter'
        required: true
      responses:
        204:
          description: Centro de distribuição atualizado com sucesso
          content: {}
        400:
          description: userId ou centerId inválidos
          content: {}
        401:
          description: Utilizador não autorizado
          content: {}
        404:
          description: Utilizador ou centro de distribuição não encontrados
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - transporter
      summary: Remover centro de distribuição
      description: "Permite remover um centro de distribuição centerId associado ao\
        \ transportador \nApenas pode ser feito pelo transportador userId quando autenticado"
      operationId: deleteDistributionCenter
      parameters:
      - name: userId
        in: path
        description: "userId do utilizador associado ao centro de distribuição \n\
          Deve corresponder a um utilizador do tipo transporter"
        required: true
        schema:
          type: integer
      - name: centerId
        in: path
        description: "centerId do centro de distribuição a ser removido \nDeve corresponder\
          \ a um centro de distribuição associado ao utilizador userId"
        required: true
        schema:
          type: integer
      responses:
        204:
          description: Centro de distribuição removido com sucesso
          content: {}
        400:
          description: userId ou centerId inválidos
          content: {}
        401:
          description: Utilizador não autorizado
          content: {}
        404:
          description: Utilizador ou centro de distribuição não encontrados
          content: {}
  ### SUPPLIER ROUTES
  ## INVENTORY
  /supplier/{userId}/inventory:
    get:
      tags:
      - supplier
      summary: Obter informação de inventário do fornecedor pelo respetivo userId
      description: Devolve um array de objetos Item, contendo os respetivos items
        a serem vendidos
      operationId: getItems
      parameters:
      - name: userId
        in: path
        description: userId do fornecedor cuja informação sobre inventário se deseja
          obter
        required: true
        schema:
          type: integer
      - name: productId
        in: query
        description: Filtro de items a aplicar à pesquisa
        schema:
          type: string
      - name: limit
        in: query
        description: Limite de items a devolver
        schema:
          type: integer
      - name: page
        in: query
        description: Página de items a devolver
        schema:
          type: integer
      - name: order
        in: query
        schema:
          type: string
          enum:
          - name
          - price_asc
          - price_desc
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        400:
          description: userId inválido
          content: {}
        404:
          description: Utilizador não encontrado
          content: {}
    post:
      tags:
      - supplier
      summary: Adicionar fornecimento de item
      description: "Permite que o fornecedor venda um novo produto \n Apenas pode\
        \ ser feito pelo fornecedor quando autenticado"
      operationId: addItem
      parameters:
      - name: userId
        in: path
        description: userId do fornecedor ao qual se vai adicionar a venda de um novo
          produto
        required: true
        schema:
          type: integer
      requestBody:
        description: "Cria um objeto Item \nO produto referido deverá estar previamente\
          \ registado na lista de produtos vendidos na loja"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      responses:
        201:
          description: Operação efetuada com sucesso
          content: {}
        400:
          description: Dados inválidos
          content: {}
        401:
          description: Utilizador não autorizado
          content: {}
      x-codegen-request-body-name: body
  ## ITEM ROUTES
  /supplier/{userId}/inventory/{itemId}:
    put:
      tags:
      - supplier
      summary: Atualizar um item específico do inventário
      description: "Permite alterar um item específico vendido pelo fornecedor \n\
        Apenas pode ser feito pelo fornecedor userId quando autenticado"
      operationId: updateItem
      parameters:
      - name: userId
        in: path
        description: "userId do utilizador que atualmente fornece o item \nDeve corresponder\
          \ a um utilizador do tipo supplier"
        required: true
        schema:
          type: integer
      - name: itemId
        in: path
        description: itemId do item a ser atualizado
        required: true
        schema:
          type: integer
      requestBody:
        description: Atualiza o objeto Item
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      responses:
        204:
          description: Item atualizado com sucesso
          content: {}
        400:
          description: userId ou itemId inválidos
          content: {}
        401:
          description: Utilizador não autorizado
          content: {}
        404:
          description: Utilizador ou item não encontrados
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - supplier
      summary: Remover fornecimento de item
      description: Apenas pode ser feito pelo fornecedor userId quando autenticado
      operationId: deleteItem
      parameters:
      - name: userId
        in: path
        description: "userId do utilizador que atualmente fornece o item \nDeve corresponder\
          \ a um utilizador do tipo supplier"
        required: true
        schema:
          type: integer
      - name: itemId
        in: path
        description: "productId do produto a deixar de fornecer \nDeve corresponder\
          \ a um produto atualmente fornecido pelo utilizador"
        required: true
        schema:
          type: integer
      responses:
        204:
          description: Produto removido com sucesso
          content: {}
        400:
          description: userId ou productId inválidos
          content: {}
        401:
          description: Utilizador não autorizado
          content: {}
        404:
          description: Utilizador ou produto não encontrados
          content: {}
  ## WAREHOUSES
  /supplier/{userId}/warehouses:
    get:
      tags:
      - supplier
      summary: Obter todos os armazéns associados ao fornecedor
      description: "Devolve um array de objetos Warehouse, conforme os armazéns registados pelo fornecedor userId. Apenas pode ser feito pelo fornecedor quando autenticado, ou por um administrador"
      operationId: getWarehouses
      parameters:
      - name: userId
        in: path
        description: userId do fornecedor cujos armazéns se deseja obter
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                properties:
                  items:
                    $ref: '#/components/schemas/SimplifiedReceivedWarehouse'
        400:
          description: userId inválido
          content: {}
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
        404:
          description: Utilizador não encontrado
          content: {}
      security:
        - bearerAuth: []
    post:
      tags:
      - supplier
      summary: Adicionar armazém
      description: |-
        Permite adicionar um novo armazém à coleção de armazéns do fornecedor. Deverá ser utilizado uma morada registada na conta do fornecedor userId, que não esteja ainda ser utilizada por outros armazéns.
        
        Apenas pode ser feito pelo fornecedor quando autenticado.

      operationId: addWarehouse
      parameters:
      - name: userId
        in: path
        description: userId do fornecedor ao qual se vai adicionar um novo armazém
        required: true
        schema:
          type: integer
      requestBody:
        description: Cria um objeto Warehouse, adicionando-o à coleção de armazéns
          do fornecedor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SentWarehouse'
        required: true
      responses:
        201:
          description: Operação efetuada com sucesso
          content: 
            application/json:
              schema: 
                properties:
                  id:
                    type: integer
                    description: "Código identificador do novo armazém"
        400:
          description: Morada escolhida é inválida
          content: 
            application/json:
              schema: 
                properties:
                  message:
                    type: string
                    enum:
                    - "Invalid address. Make sure to use an address registered to your account."
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
        404:
          description: Utilizador não encontrado
          content: {}
        409:
          description: Morada escolhida já em utilização
          content: 
            application/json:
              schema: 
                properties:
                  message:
                    type: string
                    enum:
                    - "This address is already registered to another warehouse in your account."
                    
      security:
        - bearerAuth: []
  /supplier/{userId}/warehouses/{warehouseId}:
    get:
      tags:
      - supplier
      summary: Obter informação sobre um armazém específico
      description: Devolve um objeto Warehouse, representando o armazém warehouseId
        e todos os seus detalhes
      operationId: getWarehouseById
      parameters:
      - name: userId
        in: path
        description: "userId do utilizador cuja informação se deseja saber. Deve corresponder a um utilizador do tipo supplier"
        required: true
        schema:
          type: integer
      - name: warehouseId
        in: path
        description: "warehouseId do armazém cuja informação se deseja saber. Deve corresponder a um armazém associado ao utilizador userId."
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                properties:
                  items:
                    $ref: '#/components/schemas/ExpandedReceivedWarehouse'
        400:
          description: userId inválido
          content: {}
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
        404:
          description: Armazém não encontrado
          content: 
            application/json:
              schema: 
                properties:
                  message:
                    type: string
                    enum:
                    - "Warehouse not found. Make sure to specify a warehouse registered to your account."
      security:
        - bearerAuth: []
    put:
      tags:
      - supplier
      summary: Atualizar armazém
      description: "Permite atualizar os detalhes de um armazém associado ao fornecedor. Apenas pode ser feito pelo fornecedor userId quando autenticado."
      operationId: updateWarehouse
      parameters:
      - name: userId
        in: path
        description: userId do utilizador associado ao armazém \nDeve corresponder a um utilizador do tipo "SUPPLIER".
        required: true
        schema:
          type: integer
      - name: warehouseId
        in: path
        description: "warehouseId do armazém a ser atualizado. Deve corresponder a um armazém associado ao utilizador userId"
        required: true
        schema:
          type: integer
      requestBody:
        description: Atualiza o armazém. Apenas precisam de ser especificados os atributos que se deseja atualizar. A morada selecionada deverá pertencer ao fornecedor e não deverá estar em uso em outros armazéns.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SentWarehouse'
        required: true
      responses:
        201:
          description: Operação efetuada com sucesso
          content:
            application/json:
              schema:
                properties:
                  items:
                    $ref: '#/components/schemas/ExpandedReceivedWarehouse'
        400:
          description: userId inválido
          content: {}
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
        404:
          description: Armazém não encontrado
          content: 
            application/json:
              schema: 
                properties:
                  message:
                    type: string
                    enum:
                    - "Warehouse not found. Make sure to specify a warehouse registered to your account."
        409:
          description: Morada escolhida já em utilização
          content: 
            application/json:
              schema: 
                properties:
                  message:
                    type: string
                    enum:
                    - "This address is already registered to another warehouse in your account."
      security:
        - bearerAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - supplier
      summary: Remover armazém
      description: "Permite remover um armazém da coleção de armazéns do fornecedor\
        \ \nApenas pode ser feito pelo fornecedor userId quando autenticado"
      operationId: deleteWarehouse
      parameters:
      - name: userId
        in: path
        description: "userId do utilizador associado ao armazém \nDeve corresponder\
          \ a um utilizador do tipo supplier"
        required: true
        schema:
          type: integer
      - name: warehouseId
        in: path
        description: "warehouseId do armazém a ser removido \nDeve corresponder a\
          \ um armazém associado ao utilizador userId"
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Armazém removido com sucesso
        401:
          description: "_Token_ inválido. Utilizador não autenticado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessError'
        403:
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsError'
        404:
          description: Armazém não encontrado
          content: 
            application/json:
              schema: 
                properties:
                  message:
                    type: string
                    enum:
                    - "Warehouse not found. Make sure to specify a warehouse registered to your account."
        409:
          description: Armazém ainda com produtos
          content: 
            application/json:
              schema: 
                properties:
                  message:
                    type: string
                    enum:
                    - "This warehouse cannot be deleted since there are supplies registered to it. Remove all supplies in this warehouse before attempting to delete it."
        
      security:
        - bearerAuth: []



components:
  schemas:
  ## USER DEFINITIONS
    SentUser:
      type: object
      properties:
        first_name:
          type: string
          description: Nome do utilizador
        last_name:
          type: string
          description: Apelido do utilizador
        email:
          type: string
          description: E-mail do utilizador
        password:
          type: string
          description: Palavra-passe do utilizador 
        phone:
          type: string
          description: Número de telefone do utilizador
        type:
          type: string
          enum:
          - ADMINISTRATOR
          - CONSUMER
          - SUPPLIER
          - TRANSPORTER
        company:
          $ref: '#/components/schemas/SentCompany'
      description: Objeto utilizado para devolver informação sobre um utilizador
    ReceivedUser:
      type: object
      properties:
        id:
          type: integer
          description: Código identificador do utilizador
        first_name:
          type: string
          description: Nome do utilizador
        last_name:
          type: string
          description: Apelido do utilizador
        email:
          type: string
          description: E-mail do utilizador
        phone:
          type: string
          description: Número de telefone do utilizador
        type:
          type: string
          enum:
          - ADMINISTRATOR
          - CONSUMER
          - SUPPLIER
          - TRANSPORTER
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/ReceivedAddress'
        company:
          $ref: '#/components/schemas/ReceivedCompany'
      description: Exemplo de objeto de retorno que inclui a informação do utilizador
    UpdateUser:
      type: object
      properties:
        first_name:
          type: string
          description: Nome do utilizador
        last_name:
          type: string
          description: Apelido do utilizador
        email:
          type: string
          description: E-mail do utilizador
        phone:
          type: string
          description: Número de telefone do utilizador
        old_password:
          type: string
          description: A palavra-passe atual do utilizador. Terá que condizer com
            a palavra-passe atualmente registada para que qualquer alteração restante
            seja feita (Opcional)
        new_password:
          type: string
          description: A nova palavra-passe a definir para o utilizador. Este campo
            apenas é requerido se o campo 'old_password' estiver incluido (Opcional)
      description: Objeto utilizado para devolver informação sobre um utilizador
    ReceivedID:
      type: object
      properties:
        id:
          type: integer
          description: O código identificador de um utilizador acabado de criar
      description: Objeto utilizado para devolver o ID de um utilizador acabado de
        criar
    ReceivedCompany:
      type: object
      properties:
        id:
          type: integer
          description: Código identificador da empresa
        name:
          type: string
          description: Nome da empresa
        bio:
          type: string
          description: Descrição da empresa
        email:
          type: string
          description: E-mail de contacto da empresa
      description: Objeto utilizado para representar informação sobre uma empresa
    SentCompany:
      type: object
      properties:
        name:
          type: string
          description: Nome da empresa
        bio:
          type: string
          description: Descrição da empresa
        email:
          type: string
          description: E-mail de contacto da empresa
      description: Objeto utilizado para representar informação sobre uma empresa
    SentAddress:
      type: object
      description: Objeto utilizado para criar uma morada
      properties:
        street:
          type: string
          description: Rua da morada
        city:
          type: string
          description: Cidade da morada
        postal_code:
          type: string
          description: Código postal da morada
        country:
          type: string
          description: País da morada
        nif:
          type: integer
          description: Número de contribuinte associado à morada
      xml:
        name: SentAddress
    ReceivedAddress:
      type: object
      properties:
        id:
          type: integer
          description: Código identificador da morada
        street:
          type: string
          description: Rua da morada
        city:
          type: string
          description: Cidade da morada
        country:
          type: string
          description: País da morada
        postal_code:
          type: string
          description: Código postal da morada
        nif:
          type: integer
          description: Número de contribuinte associado à morada
        latitude:
          type: number
          description: A latitude da morada especificada (precisão de 6 decimais)
        longitude:
          type: number
          description: A longitude da morada especificada (precisão de 6 decimais)
        is_shipping:
          type: boolean
          description: Atributo que sinaliza se a morada é a morada principal de envio do utilizador
        is_billing:
          type: boolean
          description: Atributo que sinaliza se a morada é a morada principal de faturação do utilizador
    UpdateAddress:
      type: object
      properties:
        street:
          type: string
          description: Rua da morada
        city:
          type: string
          description: Cidade da morada
        country:
          type: string
          description: País da morada
        postal_code:
          type: string
          description: Código postal da morada
        nif:
          type: integer
          description: Número de contribuinte associado à morada
        is_shipping:
          type: boolean
          description: Atributo que sinaliza se a morada é a morada principal de envio do utilizador
        is_billing:
          type: boolean
          description: Atributo que sinaliza se a morada é a morada principal de faturação do utilizador

    ## NOTIFICATION DEFINITIONS
    Notification:
      type: object
      properties:
        id:
          type: integer
          description: Código identificador da notificação, indexado por utilizador
        user:
          type: integer
          description: Código identificador do utilizador
        order:
          type: integer
          description: Código identificador da encomenda à qual a notificação é pertinente
        order_item:
          type: integer
          description: Código identificador do item dentro da encomenda encomenda à qual a notificação é pertinente
        title:
          type: string
          description: Título da notificação
        content:
          type: string
          description: Conteúdo da notificação
        dismissed:
          type: boolean
          description: Simboliza se a notificação já foi ou não descartada
        timestamp:
          type: string
          description: Data da emissão da notificação
        scope:
          type: string
          description: Assunto ao qual a notificação diz respeito, com base num estado da encomenda
          enum:
          - AWAITING_PAYMENT
          - PROCESSING
          - AWAITING_TRANSPORT
          - TRANSPORT_IMMINENT
          - IN_TRANSIT
          - LAST_MILE
          - COMPLETE
          - FAILURE
          - CANCELED

    ## ORDER DEFINITIONS
    SentOrder:
      type: object
      properties:
        shipping_address:
          type: integer
          description: Código identificador da morada do utilizador a utilizar como morada de envío. Deverá corresponder a uma morada previamente registada
        billing_address:
          type: integer
          description: Código identificador da morada do utilizador a utilizar como morada fiscal. Deverá corresponder a uma morada previamente registada
        observations:
          type: string
          description: Observações a incluir nesta encomenda
      description: Objeto utilizado para enviar informação sobre uma nova encomenda
      xml:
        name: Order

    ReceivedOrder:
      type: object
      properties:
        id:
          type: integer 
          description: "Código identificador da encomenda"
        consumer:
          type: object
          description: Objeto que representa o comprador da encomenda 
          properties: 
            id:
              type: integer
              description: Código identificador do comprador 
            first_name:
              type: string
              description: Primeiro nome do comprador
            last_name:
              type: string
              description: Último nome do comprador
            email:
              type: string
              description: Endereço de e-mail do comprador
            phone: 
              type: string 
              description: Contacto do comprador
        date:
          type: string
          description: Data de criação da encomenda 
        observations:
          type: string
          description: Obsevações específicadas durante a criação da encomenda
        shipping_address:
          type: integer
          description: Código identificador da morada a utilizar como morada de envío
        billing_address:
          type: integer
          description: Código identificador da morada a utilizar como morada fiscal
        items:
          type: array
          description: Os vários itens que compõem a encomenda
          items:
            properties:
              id:
                type: integer
                description: Código identificador do item dentro da encomenda
              status:
                $ref: '#/components/schemas/OrderStatus'
              order:
                type: integer
                description: Código identificador da encomenda a que o item pertence
              supply_price:
                type: number
                format: float
                description: Preço do produto vendido pelo fornecedor na altura da compra
              transport_price:
                type: number
                format: float
                description: Preço cobrado pelo transportador na altura da compra
              quantity:
                type: integer
                description: Quantidade do produto especificado
              arrival_date:
                type: string
                description: Data de chegada da encomenda (será null até se encontrar no estado "COMPLETED")
              supplier_resource_usage:
                type: number
                format: float
                description: A utilização de recursos do fornecedor para o armazenamento do produto, em kWh (Quilowatt-hora), na altura da compra
              supplier_renewable_resources:
                type: number
                format: float
                description: A percentagem de recursos utilizados pelo fornecedor oriundos de fontes renováveis na altura da compra
              transporter_resource_usage:
                type: number
                format: float
                description: A utilização de recursos do transportador para o envio de um produto, em l/100km (litros de combustível aos 100km), na altura da compra
              transporter_emissions:
                type: number
                format: float
                description: As emissões poluentes do transportador para o envio de um produto, em CO2 g/km/t (gramas de CO2 por quilómetro por tonelada), na altura da compra
              product:
                type: object
                description: Representa o produto presente na encomenda
                properties:
                  id:
                    type: integer
                    description: Código identificador do produto em questão
                  name:
                    type: string
                    description: Nome do produto em questão
              supplier:
                type: object
                description: Representa o fornecedor
                properties:
                  id:
                    type: string
                    description: Código identificador do fornecedor 
                  name:
                    type: string
                    description: Nome do fornecedor
              warehouse:
                type: object
                description: Representa o armazém em que o produto se encontra
                properties:
                  id:
                    type: string
                    description: Código identificador do armazém
                  address:
                    type: object    
                    description: Morada do armazém em questão
                    properties:
                      street:
                        type: string
                        description: Rua da morada
                      city:
                        type: string
                        description: Cidade da morada
                      country:
                        type: string
                        description: País da morada
                      postal_code:
                        type: string
                        description: Código postal da morada
                      latitude:
                        type: number
                        description: A latitude da morada especificada (precisão de 6 decimais)
                      longitude:
                        type: number
                        description: A longitude da morada especificada (precisão de 6 decimais)
              transporter:
                type: object
                description: Representa o transportador
                properties:
                  id:
                    type: string
                    description: Código identificador do transportador 
                  name:
                    type: string
                    description: Nome do transportador
              vehicle:
                type: object
                description: Representa o veículo utilizado pelo transportador para fornecer a encomenda
                properties: 
                  id:
                    type: integer
                    description: Código identificador do veículo
                  license_plate:
                    type: string
                    description: Matrícula do veículo
                  resource_usage:
                    type: number
                    format: float
                    description: Consumo médio do veículo (l/100km)
                  average_emissions:
                    type: number
                    format: float
                    description: CO2 g/km/t (gramas de CO2 por quilómetro por tonelada).
                  fuel_type:
                    type: string
                    description: Tipo de combustível do veículo 
                    enum:
                    - PETROL
                    - DIESEL
                    - ELECTRIC
                  payload_capacity:
                    type: integer
                    description: Capacidade de carga do veículo (em kg)
                  distribution_center:
                    type: integer
                    description: Código identificador do centro de distribuição ao qual o veículo pertence
              progress:
                type: array
                description: Representa as várias fases de progresso da encomenda
                items:
                  type: object
                  properties:
                    state:
                      type: string
                      description: Representa o estado da encomenda
                      enum:
                      - CREATED
                      - AWAITING_PAYMENT
                      - PROCESSING
                      - AWAITING_TRANSPORT
                      - TRANSPORT_IMMINENT
                      - IN_TRANSIT
                      - LAST_MILE
                      - COMPLETE
                      - FAILURE
                      - CANCELED
                    timestamp:
                      type: string
                      description: A data associada ao estado da encomenda
                  
      description: Objeto utilizado para enviar informação sobre uma nova encomenda
      xml:
        name: Order  

    OrderStatus:
      type: string
      description: Identificador do estado atual da encomenda
      enum:
      - AWAITING_PAYMENT
      - PROCESSING
      - AWAITING_TRANSPORT
      - TRANSPORT_IMMINENT
      - IN_TRANSIT
      - LAST_MILE
      - COMPLETE
      - FAILURE
      - CANCELED
    
    ## PRODUCT DEFINITIONS
    SentProduct:
      type: object
      properties:
        productId:
          type: string
          description: Código identificador do produto
        name:
          type: string
          description: Nome do produto
        category:
          type: integer
          description: A categoria em que o produto se insere

        complement:
          type: string
          description: productId do produto que serve de complemento a este
        items:
          type: array
          description: Items vendidos por fornecedores, relativos a este produto
          items:
            $ref: '#/components/schemas/Item'
      description: Objeto utilizado para enviar informação de criação de um novo produto
      xml:
        name: Product
    SingleProduct:
      type: object
      properties:
        id:
          type: integer
          description: O código identificador do produto
        name:
          type: string
          description: O nome do produto
        description:
          type: string
          description: A descrição do produto
        complement_name:
          type: string
          description: O nome de um produto adicional que seja necessário para o uso
            deste produto (e.g. pilhas)
        complement_amount:
          type: integer
          description: A quantidade do produto adicional requerido
        category:
          type: object
          properties:
            id:
              type: string
              description: O código identificador da categoria à qual o produto pertence
            name:
              type: string
              description: O nome da categoria à qual o produto pertence
        attributes:
          type: array
          description: Lista de atributos do produto
          items:
            type: object
            properties:
              id:
                type: integer
                description: Indíce do atributo do produto
              title:
                type: string
                description: Título do atributo do produto
              content:
                type: string
                description: Conteúdo do atributo do produto
        supplies:
          type: array
          description: Informação detalhada sobre o fornecimento de cada fornecedor
            para cada este produto
          items:
            type: object
            properties:
              warehouse:
                type: object
                properties:
                  id:
                    type: integer
                    description: Código identificador do armazém em que o produto se encontra 
                  resource_usage:
                    type: integer
                    description: Utilização média de recursos para o armazenamento de 1 item (em kWh)
                  renewable_resources:
                    type: integer
                    description: Percentagem da energia utilizada em armazenamento proveniente de fontes renováveis
              
              quantity:
                type: integer
                description: Quantidade em stock que o fornecedor tem deste produto
              price:
                type: number
                description: Preço a que o fornecedor está a vender o produto
                format: float
              production_date:
                type: string
                description: String representativo da data a que o produto foi feito
              expiration_date:
                type: string
                description: String representativo da data de validade do produto
              supplier:
                type: object
                properties:
                  id:
                    type: integer
                    description: Código identificador da empresa do fornecedor
                  name:
                    type: string
                    description: Nome da empresa
                description: Informação do fornecedor
              transports:
                type: array
                description: Informação sobre todos os transportadores que podem transportar este produto, quando vendido por este fornecedor
                items:
                  type: object
                  properties:
                    transporter:
                      type: object
                      description: Informação sobre o transportador
                      properties:
                        id:
                          type: integer
                          description: Código identificador do transportador
                        name:
                          type: string
                          description: Nome da empresa
                        average_emissions:
                          type: integer
                          description: Média de emissões da frota do transportador (em CO2 g/km/t)
                        average_resource_usage:
                          type: integer
                          description: Média de consumo de combustível da frota do transportador (em l/100km)
                    price:
                      type: number
                      description: A preço do transporte
                      format: float
              history:
                type: array
                description: Informação histórica sobre a venda deste produto por
                  parte deste fornecedor
                items:
                  type: object
                  properties:
                    moment:
                      type: string
                      description: String representativo do momento a que esta informação
                        histórica corresponde
                    quantity:
                      type: integer
                      description: Quantidade deste produto em inventário por parte
                        do fornecedor, no momento
                    price:
                      type: number
                      description: Preço a que este fornecedor vendia o produto, no
                        momento
                      format: float
      description: Objeto utilizado para devolver informação detalhada sobre um único
        produto
    Products:
      type: object
      properties:
        total_products:
          type: integer
          description: A quantidade de produtos disponíveis considerando os filtros específicados
        products:
          type: array
          description: Objeto utilizado para devolver informação sobre vários produtos
          items:
            type: object
            properties:
              id:
                type: integer
                description: O código identificador do produto
              name:
                type: string
                description: O nome do produto
              description:
                type: string
                description: A descrição do produto
              complement_name:
                type: string
                description: O nome de um produto adicional que seja necessário para o
                  uso deste produto (e.g. pilhas)
              complement_amount:
                type: integer
                description: A quantidade do produto adicional requerido
              category:
                type: object
                properties:
                  id:
                    type: string
                    description: O código identificador da categoria à qual o produto
                      pertence
                  name:
                    type: string
                    description: O nome da categoria à qual o produto pertence
              lowest_price:
                type: integer
                description: O preço mais baixo a que o produto é vendido, de entre todos
                  os seus fornecedores
              highest_price:
                type: integer
                description: O preço mais alto a que o produto é vendido, de entre todos
                  os seus fornecedores
    ReceivedWishlist:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            description: Código identificador do produto
          name:
            type: string
            description: Nome do produto em questão
          description:
            type: string
            description: Descrição do produto em questão
          category:
            type: object
            description: A categoria do produto
            properties:
              id:
                type: integer
                description: O código identificador da categoria
              name:
                type: string
                description: O nome da categoria
          lowest_price:
            type: number
            format: float
            description: O preço mais baixo a que o produto é vendido
      description: Objeto utilizado para devolver informação sobre produtos na wishlist do utilizador

    ## CATEGORY DEFINITIONS
    SentCategory:
      type: object
      properties:
        name:
          type: string
          description: Nome da categoria
        parent_category:
          type: integer
          description: A categoria-mãe da categoria em questão 
      description: Objeto utilizado para a criação de uma categoria de produtos
      xml:
        name: Category
    ReceivedCategory:
      type: object
      properties:
        id:
          type: integer
          description: Código identificador da categoria
        name:
          type: string
          description: Nome da categoria
        parent_category:
          type: integer
          description: A categoria-mãe da categoria em questão 


    ## VEHICLE DEFINITIONS
    Vehicle:
      type: object
      properties:
        vehicleId:
          type: string
          description: Código identificador do veículo
        centerId:
          type: string
          description: Código identificador da localização da base de veículos
        resourceType:
          type: string
          description: Tipo de combustível do veículo
        resourceUsage:
          type: integer
          description: Recursos utilizados, medidos em L/100km de combustível em caso
            de veículos a combustão e kWh/100km em caso de veículos elétricos
        averageEmissions:
          type: integer
          description: Média de emissões do veículo, medida em CO2 g/km/t
      description: Objeto utilizado para devolver informação sobre um veículo
      xml:
        name: Vehicle
    Item:
      type: object
      properties:
        itemId:
          type: string
          description: Código identificador do item
        productId:
          type: string
          description: Código identificador do produto
        supplierId:
          type: string
          description: Código identificador do fornecedor
        warehouseId:
          type: string
          description: Código identificador do armazém em que o item está
        price:
          type: number
          description: Preço a que o item é vendido
        warehouseStock:
          type: integer
          description: Quantidade do item em inventário no armazém warehouseId
        productionDate:
          type: string
          description: Data de produção do item
        expirationDate:
          type: string
          description: Data de validade do item
        history:
          type: array
          description: Compilação de pontos históricos e respetivos detalhes do item
          items:
            $ref: '#/components/schemas/ItemHistory'
      description: Objeto utilizado para devolver informação sobre um item itemId
      xml:
        name: Item
    ItemHistory:
      type: object
      properties:
        resourceUsage:
          type: integer
          description: Eletricidade utilizada para manter o item, medida em kWh/dia no ponto histórico
        nonRenewableResources:
          type: integer
          description: Percentagem de eletricidade utilizada para manter o item oriunda
            de recursos não-renováveis, no ponto histórico
        price:
          type: number
          description: Preço no ponto histórico
        date:
          type: string
          description: Data à qual o ponto histórico se refere
      description: Objeto utilizado para devolver o histórico de um item itemId
      xml:
        name: ItemHistory

    DistributionCenter:
      type: object
      properties:
        capacity:
          type: integer
          description: Capacidade de veículos de um centro de distribuição
        address:
          $ref: '#/components/schemas/ReceivedAddress'
        vehicles:
          type: array
          description: Informação sobre os veículos que estão no centro de distribuição
          items:
            $ref: '#/components/schemas/Vehicle'
      description: Objeto utilizado para devolver informações sobre um centro de distribuição
      xml:
        name: DistributionCenter
    ReceivedCart:
      type: object
      properties:
        items:
          type: array
          description: Conjunto de items no carrinho
          items:
            type: object
            properties:
              index:
                type: integer
                description: O índice do item no carrinho, utilizado para identificar este item em ações relativas de atualização ou remoção
              product:
                type: object
                description: Informação sobre o produto
                properties:
                  id:
                    type: integer
                    description: O código identificador do produto
                  name:
                    type: string
                    description: O nome do produto
              supplier:
                type: object
                description: Informação sobre o fornecedor
                properties:
                  id:
                    type: string
                    description: O código identificador do fornecedor
                  name:
                    type: string
                    description: O nome do fornecedor
              transporter:
                type: object
                description: Informação sobre o transportador
                properties:
                  id:
                    type: string
                    description: O código identificador do transportador
                  name:
                    type: string
                    description: O nome do transportador
              quantity:
                type: integer
                description: A quantidade do produto especificado a incluir na futura encomenda
              price:
                type: number
                format: float
                description: O preço do fornecimento do produto
              transport_price:
                type: number
                format: float
                description: O preço do transporte do produto
              supplier_renewable_resources:
                type: number
                format: float
                description: A percentagem de recursos utilizados pelo fornecedor oriundos de fontes renováveis
              average_supplier_resource_usage:
                type: number
                format: float
                description: A média de utilização de recursos do fornecedor para o armazenamento do produto, em kWh (Quilowatt-hora)
              average_transporter_resource_usage:
                type: number
                format: float
                description: A média de utilização de recursos do transportador para o envio de um produto, em l/100km (litros de combustível aos 100km)
              average_transporter_resource_emissions:
                type: number
                format: float
                description: A média de emissões poluentes do transportador para o envio de um produto, em CO2 g/km/t (gramas de CO2 por quilómetro por tonelada).
        total_price:
          type: number
          format: float
          description: Preço total do carrinho
        total_supplier_renewable_resources:
          type: number
          format: float
          description: Percentagem ponderada total de recursos oriundos de fontes renováveis utilizados pelos vários fornecedores dos itens no carrinho
        total_supplier_resource_usage:
          type: number
          format: float
          description: Total de utilização de recursos por parte dos vários fornecedores dos itens no carrinho para o armazenamento de produtos, em kWh (Quilowatt-hora)
        total_transporter_resource_usage:
          type: number
          format: float
          description: Total de utilização de recursos por parte dos vários transportadores dos itens no carrinho para o envio de produtos, em l/100km (litros de combustível aos 100km)
        total_transporter_emissions:
          type: number
          format: float
          description: Total de emissões poluentes feitas por parte dos vários transportadores dos itens no carrinho para o envio de produtos, em CO2 g/km/t (gramas de CO2 por quilómetro por tonelada)
      description: Objeto utilizado para representar o cesto de compras de um utilizador,
        detalhando cada item incluído e respetiva quantidade
      xml:
        name: ReceivedCart
    SentCartItem:
      type: object
      properties:
        product:
          type: integer
          description: Código identificador do produto a ser adicionado ao carrinho
        supplier:
          type: integer
          description: Código identificador do fornecedor escolhido
        transporter:
          type: integer
          description: Código identificador do transportador escolhido
        warehouse:
          type: integer
          description: Código identificador do armazém que contém o produto escolhido
        quantity:
          type: integer
          description: Quantidade do item. Deverá ser um valor igual ou inferior à quantidade de stock disponível pelo fornecedor
      description: |-
          Objeto que deverá ser fornecido ao ser colocado no carrinho, especificando os parâmetros do fornecimento e quantidade desejada. 

          Nota: a combinação `product`, `supplier`, `transporter` deverá ser válida.
      xml:
        name: SentCartItem

    ReceivedSuppliers:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            description: Código identificador do fornecedor
          first_name:
            type: string
            description: Primeiro nome do utilizador da conta de fornecedor
          last_name:
            type: string
            description: Último nome do utilizador da conta de fornecedor
          phone: 
            type: string
            description: Número de telefone associado à conta de utilizador do fornecedor, i.e. número de telefone do representante
          email:
            type: string
            description: Conta de e-mail associada à conta de utilizador do fornecedor, i.e. e-mail do representante
          company:
            type: object
            description: Informação sobre a empresa do fornecedor
            properties:
              name:
                type: string
                description: Nome da empresa
              bio:
                type: string
                description: Descrição da empresa
              email:
                type: string
                description: E-mail de contacto da empresa
          products_sold:
            type: integer
            description: A quantidade de produtos que são fornecidos pelo fornecedor em questão

    # Warehouse Definitions

    SentWarehouse:
      type: object
      properties:
        address:
          type: integer
          description: Código identificador da morada a utilizar para o armazém em questão
        capacity:
          type: number
          format: float
          description: Capacidade total do armazém (em m²)
        resource_usage:
          type: number
          format: float
          description: Quantidade média de energia utilizada para armazenar um produto por dia (em kWh/dia)
        renewable_resources:
          type: integer
          description: Percentagem de energia utilizada pelo armazém que provém de fontes renováveis (entre 0 e 100)

    SimplifiedReceivedWarehouse:
      type: object
      properties:
        id:
          type: integer
          description: Código identificador do armazém, indexado por fornecedor
        capacity:
          type: number
          format: float
          description: Capacidade total do armazém (em m²)
        resource_usage:
          type: number
          format: float
          description: Quantidade média de energia utilizada para armazenar um produto por dia (em kWh/dia)
        renewable_resources:
          type: integer
          description: Percentagem de energia utilizada pelo armazém que provém de fontes renováveis (entre 0 e 100)
        unique_products:
          type: integer
          description: Quantidade de produtos diferentes dos quais o armazém contém stock
        combined_stock:
          type: integer
          description: Quantidade total de stock presente no armazém (junção de todos os produtos)
        total_value:
          type: number
          format: float
          description: Valor total do armazém, tendo em conta o valor de venda e quantidade de cada produto
        estimated_total_resource_usage: 
          type: number
          format: float
          description: Estimativa da utilização de energia total *diária* do armazém, tendo em conta a quantidade média de energia utilizada diariamente para armazenar um produto e a quantidade de produtos presente
        address:
          type: object    
          description: Morada do armazém em questão
          properties:
            street:
              type: string
              description: Rua da morada
            city:
              type: string
              description: Cidade da morada
            country:
              type: string
              description: País da morada
            postal_code:
              type: string
              description: Código postal da morada
            latitude:
              type: number
              description: A latitude da morada especificada (precisão de 6 decimais)
            longitude:
              type: number
              description: A longitude da morada especificada (precisão de 6 decimais)

    ExpandedReceivedWarehouse:
      type: object
      properties:
        id:
          type: integer
          description: Código identificador do armazém, indexado por fornecedor
        capacity:
          type: number
          format: float
          description: Capacidade total do armazém (em m²)
        resource_usage:
          type: number
          format: float
          description: Quantidade média de energia utilizada para armazenar um produto por dia (em kWh/dia)
        renewable_resources:
          type: integer
          description: Percentagem de energia utilizada pelo armazém que provém de fontes renováveis (entre 0 e 100)
        unique_products:
          type: integer
          description: Quantidade de produtos diferentes dos quais o armazém contém stock
        combined_stock:
          type: integer
          description: Quantidade total de stock presente no armazém (junção de todos os produtos)
        total_value:
          type: number
          format: float
          description: Valor total do armazém, tendo em conta o valor de venda e quantidade de cada produto
        estimated_total_resource_usage: 
          type: number
          format: float
          description: Estimativa da utilização de energia total *diária* do armazém, tendo em conta a quantidade média de energia utilizada diariamente para armazenar um produto e a quantidade de produtos presente
        address:
          type: object    
          description: Morada do armazém em questão
          properties:
            street:
              type: string
              description: Rua da morada
            city:
              type: string
              description: Cidade da morada
            country:
              type: string
              description: País da morada
            postal_code:
              type: string
              description: Código postal da morada
            latitude:
              type: number
              description: A latitude da morada especificada (precisão de 6 decimais)
            longitude:
              type: number
              description: A longitude da morada especificada (precisão de 6 decimais)
        supplies:
          type: array
          description: Informação detalhada sobre o fornecimento de cada fornecedor
            para cada este produto
          items:
            type: object
            properties:
              warehouse:
                type: object
                properties:
                  id:
                    type: integer
                    description: Código identificador do armazém em que o produto se encontra 
                  resource_usage:
                    type: integer
                    description: Utilização média de recursos para o armazenamento de 1 item (em kWh)
                  renewable_resources:
                    type: integer
                    description: Percentagem da energia utilizada em armazenamento proveniente de fontes renováveis
              
              quantity:
                type: integer
                description: Quantidade em stock que o fornecedor tem deste produto
              price:
                type: number
                description: Preço a que o fornecedor está a vender o produto
                format: float
              production_date:
                type: string
                description: String representativo da data a que o produto foi feito
              expiration_date:
                type: string
                description: String representativo da data de validade do produto
              supplier:
                type: object
                properties:
                  id:
                    type: integer
                    description: Código identificador da empresa do fornecedor
                  name:
                    type: string
                    description: Nome da empresa
                description: Informação do fornecedor
              transports:
                type: array
                description: Informação sobre todos os transportadores que podem transportar este produto, quando vendido por este fornecedor
                items:
                  type: object
                  properties:
                    transporter:
                      type: object
                      description: Informação sobre o transportador
                      properties:
                        id:
                          type: integer
                          description: Código identificador do transportador
                        name:
                          type: string
                          description: Nome da empresa
                        average_emissions:
                          type: integer
                          description: Média de emissões da frota do transportador (em CO2 g/km/t)
                        average_resource_usage:
                          type: integer
                          description: Média de consumo de combustível da frota do transportador (em l/100km)
                    price:
                      type: number
                      description: A preço do transporte
                      format: float
              history:
                type: array
                description: Informação histórica sobre a venda deste produto por
                  parte deste fornecedor
                items:
                  type: object
                  properties:
                    moment:
                      type: string
                      description: String representativo do momento a que esta informação
                        histórica corresponde
                    quantity:
                      type: integer
                      description: Quantidade deste produto em inventário por parte
                        do fornecedor, no momento
                    price:
                      type: number
                      description: Preço a que este fornecedor vendia o produto, no
                        momento
                      format: float
  
    Payment:
      type: object
      properties:
        paymentId:
          type: string
          description: Código identificador do pagamento
        status:
          type: string
          description: Estado do pagamento
        price:
          type: number
          description: Preço da encomenda
        paymentType:
          type: string
          description: Tipo de pagamento
      description: Objeto utilizado para devolver informações sobre o pagamento de
        uma encomenda
      xml:
        name: Payment

    ## TODO: Transform this into responses
    ## CONFIRMATIONS AND ERRORS
    UnauthorizedAccessError:
      type: object
      properties:
        message:
          type: string
          enum:
          - Invalid token. Unauthorized access.
      description: Erro devolvido durante uma tentativa de acesso não autenticada
        a um recurso protegido (token inválido)
    InsufficientPermissionsError:
      type: object
      properties:
        message:
          type: string
          enum:
          - Insufficient permissions for specified resource.
      description: Erro devolvido durante uma tentativa de acesso não autenticada a um recurso protegido
    InvalidDataError:
      type: object
      properties:
        message:
          type: string
          enum:
          - "Invalid data. Make sure to include every field."
      description: Erro devolvido durante uma tentativa de criação ou atualização de um recurso em falta de campos obrigatórios. Na maioria dos casos, esta resposta incluirá também mensagens explicativas sobre as causas de erro."
    
    LocalAuthenticationError:
      type: object
      properties:
        message:
          type: string
          enum:
          - User with specified e-mail not found.
          - Wrong credentials for specified user.
      description: Erro devolvido durante uma tentativa de login por e-mail e palavra-passe
        mal sucedida
    ReceivedToken:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoxLCJlbWFpbCI6InRlZXRAdGVzdC5jb20ifSwiaWF0IjoxNjQ4MzA3MzU4LCJleHAiOjE2NDgzMDczNzN9.GWEYBFN_kNPgdw899ZiOTbmg927YUiEDH5ICbetpkkU
        id:
          type: integer
          example: 1
      description: Objeto utilizado para devolver o _token_ JWT após autenticação,
        bem como o código identificador do utilizador a que diz respeito
    ValidStatusConfirmation:
      type: object
      properties:
        message:
          type: string
          enum:
          - Valid token. User logged in.
        id:
          type: integer
          description: Código identificador do utilizador autenticado
      description: Objeto utilizado para confirmar a validade do estado atual de autenticação
        de um dado utilizador
    SentAuthenticationData:
      type: object
      properties:
        email:
          type: string
          description: O endereço de e-mail associado ao utilizador a autenticar
        password:
          type: string
          description: A palavra-passe do utilizador a autenticar
      description: Objeto utilizado para enviar as credenciais do utilizador a autenticar
  
  ## SECURITY SCHEMES
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT

