swagger: "2.0"
info:
  description: "Versão preliminar do API REST Greenly. \n Saiba mais sobre o nosso serviço em https://greenly.pt\nVeja esta documentação de forma mais cómoda em https://bump.sh/doc/greenly"
  version: "1.0.1"
  title: "Greenly"
  termsOfService: "http://greenly.pt/terms/"
  contact:
    email: "help@greenly.pt"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "greenly.pt"
basePath: "/api"
tags:
- name: "user"
  description: "Operações sobre utilizadores"
- name: "transporter"
  description: "Operações orientadas a transportadores"
- name: "supplier"
  description: "Operações orientadas a fornecedores"
- name: "store"
  description: "Operações orientadas à loja"
  
schemes:
- "https"
- "http"
paths:
### USER ROUTES
  /user:
    get:
      tags:
      - "user"
      summary: "Obter informação de todos os utilizadores"
      description: "Operação limitada a administradores"
      operationId: "getUsers"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Operação efetuada com sucesso"
          schema:
            $ref: "#/definitions/ReceivedUser"
    post:
      tags:
      - "user"
      summary: "Criar utilizador"
      description: ""
      operationId: "createUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Cria um objeto User.\n\nNota: Por padrão, o atributo 'password' não é devolvido."
        required: true
        schema:
          $ref: "#/definitions/SentUser"
      responses:
        "201":
          description: "Operação efetuada com sucesso"
          schema:
            $ref: "#/definitions/ReceivedID"
        "400":
          description: "Dados inválidos"
  /user/{userId}:
    get:
      tags:
      - "user"
      summary: "Obter utilizador pelo respetivo userId"
      description: "A informação devolvida depende do nível de permissões do utilizador que faz o pedido"
      operationId: "getUserByName"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador cuja informação se deseja obter"
        required: true
        type: "string"
      responses:
        "200":
          description: "Operação efetuada com sucesso"
          schema:
            $ref: "#/definitions/ReceivedUser"
        "400":
          description: "userId inválido"
        "404":
          description: "Utilizador não encontrado"
    put:
      tags:
      - "user"
      summary: "Atualizar utilizador"
      description: "Apenas pode ser feito pelo utilizador quando autenticado (ou por um administrador)"
      operationId: "updateUser"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador cuja informação se deseja atualizar"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Atualiza o objeto User. Requere-se apenas que sejam enviados os parâmetros que seram alterados. (e.g. enviar um valor no parâmetro e-mail causará a sua atualização.\nNo caso de atualização de password, deverão ser incluidos os parâmetros 'old_password', representativo da password atual do respetivo utilizador, e 'new_password', representativo do novo valor da password. Caso o valor do parâmetro 'old_password' não corresponder à atual password do utilizador, o pedido não será concluido.\n\nNota: O parâmetro 'userId' não é aceite, devendo este ser mencionado como parâmetro de URL."
        required: true
        schema:
          $ref: "#/definitions/UpdateUser"
      responses:
        "204":
          description: "Utilizador atualizado com sucesso"
        "400":
          description: "Dados inválidos"
        "401":
          description: "Utilizador não autorizado"
        "404":
          description: "Utilizador não encontrado"
        "409":
          description: "Valor unico fornecido está em conflito com valores de outros utilizadores (e.g. e-mail, NIF)"
    delete:
      tags:
      - "user"
      summary: "Apagar utilizador"
      description: "Apenas pode ser feito pelo utilizador quando autenticado (ou por um administrador)"
      operationId: "deleteUser"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador que será removido"
        required: true
        type: "string"
      responses:
        "204":
          description: "Utilizador removido com sucesso"
        "400":
          description: "userId inválido"
        "401":
          description: "Utilizador não autorizado"
        "404":
          description: "Utilizador não encontrado"
## ORDER ROUTES
  /user/{userId}/orders: 
    get:
      tags:
      - "user"
      summary: "Obter encomendas do utilizador userId"
      description: "Devolve um array de encomendas associadas ao utilizador userId, independentemente do seu tipo \n Apenas pode ser feito pelo utilizador quando autenticado (ou por um administrador)"
      operationId: "getUserOrders"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador cuja lista de encomendas se deseja obter"
        required: true
        type: "string"
      responses:
        "200":
          description: "Operação efetuada com sucesso"
          schema:
            $ref: "#/definitions/Order"
        "400":
          description: "userId inválido"
        "404":
          description: "Utilizador não encontrado"
    post:
      tags:
      - "user"
      summary: "Criar encomenda"
      description: "Apenas pode ser feito pelo utilizador quando autenticado \nDeve corresponder a um utilizador do tipo consumer \n Durante esta criação, o valor inicial do campo status deve ser 'awaiting_payment'"
      operationId: "createOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador a criar encomenda"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Cria um objeto Order"
        required: true
        schema:
          $ref: "#/definitions/Order"
      responses:
        "201":
          description: "Operação efetuada com sucesso"
        "400":
          description: "Dados inválidos"
        "401":
          description: "Utilizador não autorizado"
        "404":
          description: "Utilizador não encontrado"
## WISHLIST ROUTES
  /user/{userId}/wishlist:
    get:
      tags:
      - "user"
      summary: "Obter produtos na wishlist do utilizador userId"
      description: "Apenas pode ser feito pelo utilizador quando autenticado"
      operationId: "getWishlist"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador cuja wishlist se deseja obter \nDeve corresponder a um utilizador do tipo consumer"
        required: true
        type: "string"
      responses:
        "200":
          description: "Operação efetuada com sucesso"
          schema:
            $ref: "#/definitions/Products"
        "400":
          description: "userId inválido"
        "404":
          description: "Utilizador não encontrado"
    post:
      tags:
      - "user"
      summary: "Adicionar produto à wishlist"
      description: "Apenas pode ser feito pelo utilizador quando autenticado"
      operationId: "addToWishlist"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador cuja wishlist irá receber um produto \nDeve corresponder a um utilizador do tipo consumer"
        required: true
        type: "string"
      - in: "body"
        name: "productID"
        description: "productId do produto a ser adicionado à wishlist"
        required: true
        schema:
          $ref: "#/definitions/WishlistProduct"
      responses:
        "201":
          description: "Operação efetuada com sucesso"
        "400":
          description: "userId ou productId inválidos"
        "401":
          description: "Utilizador não autorizado"
        "404":
          description: "Utilizador ou produto não encontrados"
  /user/{userId}/wishlist/{productId}:
    delete:
          tags:
          - "user"
          summary: "Remover produto da wishlist"
          description: "Apenas pode ser feito pelo utilizador quando autenticado"
          operationId: "removeFromWishlist"
          produces:
          - "application/json"
          parameters:
          - name: "userId"
            in: "path"
            description: "userId do utilizador associado à wishlist \nDeve corresponder a um utilizador do tipo consumer"
            required: true
            type: "string"
          - name: "productId"
            in: "path"
            description: "productId do produto a remover da wishlist \nDeve corresponder a um produto atualmente na wishlist do utilizador"
            required: true
            type: "string"
          responses:
            "204":
              description: "Produto removido com sucesso"
            "400":
              description: "userId ou productId inválidos"
            "401":
              description: "Utilizador não autorizado"
            "404":
              description: "Utilizador ou produto não encontrados"
## CART ROUTES
  /user/{userId}/cart:
    get:
      tags:
      - "user"
      summary: "Obter items no cesto de compras"
      description: "Obter items que estão no cesto de compras do utilizador userId \nLimita-se a utilizadores autenticados, o funcionamento para utilizadores não autenticados é session-based"
      operationId: "getCart"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador cujo cesto de compras se deseja obter"
        required: true
        type: "string"
      responses:
        "200":
          description: "Operação efetuada com sucesso"
          schema:
            $ref: "#/definitions/Cart"
        "400":
          description: "userId inválido"
        "404":
          description: "Utilizador não encontrado"
    post:
      tags:
      - "user"
      summary: "Adicionar item ao cesto de compras"
      description: "Adicionar item com identificador itemId ao cesto de compras do utilizador userId\n A quantidade deverá ser menor ou igual que o stock atual do produto \nLimita-se a utilizadores autenticados, o funcionamento para utilizadores não autenticados é session-based"
      operationId: "addToCart"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador associado ao cesto de compras ao qual será adicionado um produto"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "itemId do item a ser adicionado ao cesto de compras e respetiva quantidade"
        required: true
        schema:
          $ref: "#/definitions/CartItem"
      responses:
        "201":
          description: "Operação efetuada com sucesso"
        "400":
          description: "userId ou itemId inválidos"
        "401":
          description: "Utilizador não autorizado"
        "404":
          description: "Utilizador ou item não encontrados"
    delete:
      tags:
      - "user"
      summary: "Limpar todos os items no cesto de compras"
      description: "Permite retirar todos os items que estão no cesto de compras do utilizador userId \nLimita-se a utilizadores autenticados, o funcionamento para utilizadores não autenticados é session-based"
      operationId: "clearCart"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador cujo cesto de compras se deseja obter"
        required: true
        type: "string"
      responses:
        "204":
          description: "Items removidos com sucesso"
        "400":
          description: "userId inválido"
        "401":
          description: "Utilizador não autorizado"
        "404":
          description: "Utilizador encontrado"
  /user/{userId}/cart/{itemId}:
    delete:
      tags:
      - "user"
      summary: "Remover item do cesto de compras"
      description: "Remover item itemId do cesto de compras do utilizador userId \nLimita-se a utilizadores autenticados, o funcionamento para utilizadores não autenticados é session-based"
      operationId: "removeFromCart"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador associado ao cesto de compras"
        required: true
        type: "string"
      - name: "itemId"
        in: "path"
        description: "itemId do item a remover do cesto de compras \nDeve corresponder a um item atualmente no cesto de compras do utilizador"
        required: true
        type: "string"
      responses:
        "204":
          description: "Item removido com sucesso"
        "400":
          description: "userId ou itemId inválidos"
        "401":
          description: "Utilizador não autorizado"
        "404":
          description: "Utilizador ou item não encontrados"

### STORE ROUTES
## PRODUCT ROUTES
  /store/products:
    get:
      tags:
      - "store"
      summary: "Obter todos os produtos na loja"
      description: "Devolve informação sobre todos os produtos na loja"
      operationId: "getProducts"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "sort"
        type: "string"
        enum:
          - "price_asc"
          - "price_desc"
        required: false
        description: "Ordem aplicada ao resultado devolvido"
      - in: "query"
        name: "limit"
        type: "integer"
        required: false
        description: "Limite de produtos a devolver"
      - in: "query"
        name: "page"
        type: "integer"
        required: false
        description: "Página de produtos a devolver"
      - in: "query"
        name: "category"
        type: "integer"
        required: false
        description: "Identificador da categoria de produtos a devolver"
      - in: "query"
        name: "keyword"
        type: "array"
        items:
          type: "string"
        required: false
        description: "Palavas-chave a incluir na pesquisa"
      responses:
        "200":
          description: "Operação efetuada com sucesso"
          schema:
            $ref: "#/definitions/Products"
    post:
      tags:
      - "store"
      summary: "Criar produto"
      description: "Criar um novo produto, disponibilizando a sua comercialização por parte de fornecedores \nOperação limitada a administradores"
      operationId: "createProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Cria um objeto Product"
        required: true
        schema:
          $ref: "#/definitions/SentProduct"
      responses:
        "201":
          description: "Operação efetuada com sucesso"
        "400":
          description: "Dados inválidos"
        "409":
          description: "O produto já existe"
  /store/products/{productId}:
    get:
      tags:
      - "store"
      summary: "Obter produto pelo respetivo productId"
      description: "Devolve um objeto Product"
      operationId: "getProductById"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "productId do produto cuja informação se deseja obter"
        required: true
        type: "string"
      responses:
        "200":
          description: "Operação efetuada com sucesso"
          schema:
            $ref: "#/definitions/SingleProduct"
        "400":
          description: "productId inválido"
        "404":
          description: "Produto não encontrado"
    put:
      tags:
      - "store"
      summary: "Atualizar produto"
      description: "Altera os detalhes de um produto \nOperação limitada a administradores"
      operationId: "updateProduct"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "productId do produto cuja informação se deseja atualizar"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Atualiza o objeto Product"
        required: true
        schema:
          $ref: "#/definitions/SentProduct"
      responses:
        "204":
          description: "Produto atualizado com sucesso"
        "400":
          description: "productId inválido"
        "401":
          description: "Utilizador não autorizado"
        "404":
          description: "Produto não encontrado"
    delete:
      tags:
      - "store"
      summary: "Apagar produto"
      description: "Remove um produto da loja \nOperação limitada a administradores"
      operationId: "deleteProduct"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "productId do produto que será removido"
        required: true
        type: "string"
      responses:
        "204":
          description: "Produto removido com sucesso"
        "400":
          description: "productId inválido"
        "401":
          description: "Utilizador não autorizado"
        "404":
          description: "Produto não encontrado"
## ORDER ROUTES
  /store/orders:
    get:
      tags:
      - "store"
      summary: "Obter todas as encomendas na loja"
      description: "Devolve informação sobre todas as encomendas na loja \nOperação limitada a administradores"
      operationId: "getOrders"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Operação efetuada com sucesso"
          schema:
            $ref: "#/definitions/Order"
  /store/orders/{orderId}:
    get:
      tags:
      - "store"
      summary: "Obter encomenda específica pelo respetivo orderId"
      description: "Devolve um objeto Order, se essa order estiver associada ao utilizador que pediu  \nOperação limitada a administradores e utilizadores que estejam associados à encomenda orderId (independentemente do seu tipo)"
      operationId: "getOrderById"
      produces:
      - "application/json"
      parameters:
      - name: "orderId"
        in: "path"
        description: "orderId da encomenda cuja informação se deseja obter"
        required: true
        type: "string"
      responses:
        "200":
          description: "Operação efetuada com sucesso"
          schema:
            $ref: "#/definitions/Order"
        "400":
          description: "orderId inválido"
        "404":
          description: "Encomenda não encontrada"
    put:
      tags:
      - "store"
      summary: "Atualizar encomenda"
      description: "Permite a alteração do estado da encomenda \nOperação limitada a administradores e utilizadores que estejam associados à encomenda orderId (independentemente do seu tipo)"
      operationId: "updateOrder"
      produces:
      - "application/json"
      parameters:
      - name: "orderId"
        in: "path"
        description: "orderId da encomenda a ser atualizada"
        required: true
        type: "string"
      - in: "body"
        name: "orderStatus"
        description: "Atualiza o objeto OrderStatus que se encontra dentro da encomenda orderId"
        schema:
          $ref: "#/definitions/OrderStatus"
        required: true
      responses:
        "204":
          description: "Encomenda atualizada com sucesso"
        "400":
          description: "orderId inválido"
        "401":
          description: "Utilizador não autorizado"
        "404":
          description: "Encomenda não encontrada"
          
### TRANSPORTER ROUTES
  /transporter/{userId}/vehicles:
    get:
      tags:
      - "transporter"
      summary: "Obter veículos associados ao transportador userId"
      description: "Devolve um array de objetos Vehicle, conforme os veículos registados pelo transportador userId \nApenas pode ser feito pelo transportador quando autenticado, ou por um administrador"
      operationId: "getTransporterVehicles"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador cujos veículos se deseja obter \nDeve corresponder a um utilizador do tipo transporter"
        required: true
        type: "string"
      responses:
        "200":
          description: "Operação efetuada com sucesso"
          schema:
            $ref: "#/definitions/Vehicle"
        "400":
          description: "userId inválido"
        "404":
          description: "Utilizador não encontrado"
    post:
      tags:
      - "transporter"
      summary: "Adicionar um novo veículo à coleção do transportador"
      description: "Apenas pode ser feito pelo transportador userId quando autenticado"
      operationId: "addVehicle"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador a registar o veículo \nDeve corresponder a um utilizador do tipo transporter"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Cria um objeto Product"
        required: true
        schema:
          $ref: "#/definitions/Vehicle"
      responses:
        "201":
          description: "Operação efetuada com sucesso"
        "400":
          description: "Dados inválidos"
        "401":
          description: "Utilizador não autorizado"
        "409":
          description: "O produto já existe"
  /transporter/{userId}/vehicles/{vehicleId}:
    get:
      tags:
      - "transporter"
      summary: "Obter um veículo específico associado ao transportador usedId"
      description: "Devolve um objeto Vehicle, registado pelo transportador userId \nApenas pode ser feito pelo transportador quando autenticado, ou por um administrador"
      operationId: "getTransporterVehicleById"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador que registou o veículo \nDeve corresponder a um utilizador do tipo transporter"
        required: true
        type: "string"
      - name: "vehicleId"    
        in: "path"
        description: "vehicleId do veículo \nDeve corresponder a um veículo pertencente à frota do transportador"
        required: true
        type: "string"
      responses:
        "200":
          description: "Operação efetuada com sucesso"
          schema:
            $ref: "#/definitions/Vehicle"
        "400":
          description: "userId ou vehicleId inválidos"
        "404":
          description: "Utilizador ou veículo não encontrados"
    put:
      tags:
      - "transporter"
      summary: "Atualizar veículo"
      description: "Permite alterar detalhes de úm veículo já registado \nApenas pode ser feito pelo transportador userId quando autenticado"
      operationId: "updateVehicle"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador que registou o veículo \nDeve corresponder a um utilizador do tipo transporter"
        required: true
        type: "string"
      - name: "vehicleId"    
        in: "path"
        description: "vehicleId do veículo a atualizar \nDeve corresponder a um veículo pertencente à frota do transportador"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Atualiza o objeto Vehicle"
        required: true
        schema:
          $ref: "#/definitions/Vehicle"
      responses:
        "204":
          description: "Veículo atualizado com sucesso"
        "400":
          description: "userId ou vehicleId inválidos"
        "401":
          description: "Utilizador não autorizado"
        "404":
          description: "Utilizador ou veículo não encontrados"
    delete:
      tags:
      - "transporter"
      summary: "Apagar veículo"
      description: "Permite apagar um veículo, removendo-o da frota do transportador \nApenas pode ser feito pelo transportador userId quando autenticado"
      operationId: "deleteVehicle"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador que registou o veículo \nDeve corresponder a um utilizador do tipo transporter"
        required: true
        type: "string"
      - name: "vehicleId"    
        in: "path"
        description: "vehicleId do veículo a remover \nDeve corresponder a um veículo pertencente à frota do transportador"
        required: true
        type: "string"
      responses:
        "204":
          description: "Veículo removido com sucesso"
        "400":
          description: "userId ou vehicleId inválidos"
        "401":
          description: "Utilizador não autorizado"
        "404":
          description: "Utilizador ou veículo não encontrados"
## DISTRIBUTION CENTER ROUTES
  /transporter/{userId}/centers:
    get:
      tags:
      - "transporter"
      summary: "Obter centros de distribuição associados ao transportador userId"
      description: "Devolve um array de objetos DistributionCenter, conforme os centros de distribuição registados pelo transportador userId \nApenas pode ser feito pelo transportador quando autenticado, ou por um administrador"
      operationId: "getDistributionCenters"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do transportador cujos centros de distribuição se deseja obter"
        required: true
        type: "string"
      responses:
        "200":
          description: "Operação efetuada com sucesso"
          schema:
            $ref: "#/definitions/DistributionCenter"
        "400":
          description: "userId inválido"
        "404":
          description: "Utilizador não encontrado"
    post:
      tags:
      - "transporter"
      summary: "Adicionar centro de distribuição"
      description: "Adiciona um novo objeto DistributionCenter ao conjunto de centro de distribuição do transportador \nApenas pode ser feito pelo transportador quando autenticado, ou por um administrador"
      operationId: "addDistributionCenter"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do transportador ao qual se vai adicionar um novo centro de distribuição"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Cria um objeto DistributionCenter, adicionando-o à coleção de centros de distribuição do transportador"
        required: true
        schema:
          $ref: "#/definitions/DistributionCenter"
      responses:
        "201":
          description: "Operação efetuada com sucesso"
        "400":
          description: "Dados inválidos"
        "401":
          description: "Utilizador não autorizado"
  /transporter/{userId}/centers/{centerId}:
    get:
      tags:
      - "transporter"
      summary: "Obter informação sobre um centro de distribuição centerId do transportador userId"
      description: "Devolve um objeto DistributionCenter \nApenas pode ser feito pelo transportador quando autenticado, ou por um administrador"
      operationId: "getCenterById"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador cuja informação se deseja saber \nDeve corresponder a um utilizador do tipo transporter"
        required: true
        type: "string"
      - name: "centerId"    
        in: "path"
        description: "centerId do centro de distribuição cuja informação se deseja saber \nDeve corresponder a um centro de distribuição associado ao utilizador userId"
        required: true
        type: "string"
      responses:
        "200":
          description: "Operação efetuada com sucesso"
          schema:
            $ref: "#/definitions/DistributionCenter"
        "400":
          description: "userId ou centerId inválidos"
        "404":
          description: "Utilizador ou centro de distribuição não encontrados"
    put:
      tags:
      - "transporter"
      summary: "Atualizar centro de distribuição"
      description: "Permite atualizar um centro de distribuição centerId associado ao transportador \nApenas pode ser feito pelo transportador userId quando autenticado"
      operationId: "updateDistributionCenter"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador associado ao centro de distribuição \nDeve corresponder a um utilizador do tipo transporter"
        required: true
        type: "string"
      - name: "centerId"    
        in: "path"
        description: "centerId do centro de distribuição a ser atualizado \nDeve corresponder a um centro de distribuição associado ao utilizador userId"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Atualiza o objeto DistributionCenter"
        required: true
        schema:
          $ref: "#/definitions/DistributionCenter"
      responses:
        "204":
          description: "Centro de distribuição atualizado com sucesso"
        "400":
          description: "userId ou centerId inválidos"
        "401":
          description: "Utilizador não autorizado"
        "404":
          description: "Utilizador ou centro de distribuição não encontrados"
    delete:
      tags:
      - "transporter"
      summary: "Remover centro de distribuição"
      description: "Permite remover um centro de distribuição centerId associado ao transportador \nApenas pode ser feito pelo transportador userId quando autenticado"
      operationId: "deleteDistributionCenter"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador associado ao centro de distribuição \nDeve corresponder a um utilizador do tipo transporter"
        required: true
        type: "string"
      - name: "centerId"
        in: "path"
        description: "centerId do centro de distribuição a ser removido \nDeve corresponder a um centro de distribuição associado ao utilizador userId"
        required: true
        type: "string"
      responses:
        "204":
          description: "Centro de distribuição removido com sucesso"
        "400":
          description: "userId ou centerId inválidos"
        "401":
          description: "Utilizador não autorizado"
        "404":
          description: "Utilizador ou centro de distribuição não encontrados"

### SUPPLIER ROUTES
## INVENTORY
  /supplier/{userId}/inventory:
    get:
      tags:
      - "supplier"
      summary: "Obter informação de inventário do fornecedor pelo respetivo userId"
      description: "Devolve um array de objetos Item, contendo os respetivos items a serem vendidos"
      operationId: "getItems"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do fornecedor cuja informação sobre inventário se deseja obter"
        required: true
        type: "string"
      - in: "query"
        name: "productId"
        type: "string"
        required: false
        description: "Filtro de items a aplicar à pesquisa"
      - in: "query"
        name: "limit"
        type: "integer"
        required: false
        description: "Limite de items a devolver"
      - in: "query"
        name: "page"
        type: "integer"
        required: false
        description: "Página de items a devolver"
      - in: "query"
        name: "order"
        type: "string"
        enum:
          - "name"
          - "price_asc"
          - "price_desc"
      responses:
        "200":
          description: "Operação efetuada com sucesso"
          schema:
            $ref: "#/definitions/Item"
        "400":
          description: "userId inválido"
        "404":
          description: "Utilizador não encontrado"
    post:
      tags:
      - "supplier"
      summary: "Adicionar fornecimento de item"
      description: "Permite que o fornecedor venda um novo produto \n Apenas pode ser feito pelo fornecedor quando autenticado"
      operationId: "addItem"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do fornecedor ao qual se vai adicionar a venda de um novo produto"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Cria um objeto Item \nO produto referido deverá estar previamente registado na lista de produtos vendidos na loja"
        required: true
        schema:
          $ref: "#/definitions/Item"
      responses:
        "201":
          description: "Operação efetuada com sucesso"
        "400":
          description: "Dados inválidos"
        "401":
          description: "Utilizador não autorizado"
## ITEM ROUTES          
  /supplier/{userId}/inventory/{itemId}:
    put:
      tags:
      - "supplier"
      summary: "Atualizar um item específico do inventário"
      description: "Permite alterar um item específico vendido pelo fornecedor \nApenas pode ser feito pelo fornecedor userId quando autenticado"
      operationId: "updateItem"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador que atualmente fornece o item \nDeve corresponder a um utilizador do tipo supplier"
        required: true
        type: "string"
      - name: "itemId"    
        in: "path"
        description: "itemId do item a ser atualizado"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Atualiza o objeto Item"
        required: true
        schema:
          $ref: "#/definitions/Item"
      responses:
        "204":
          description: "Item atualizado com sucesso"
        "400":
          description: "userId ou itemId inválidos"
        "401":
          description: "Utilizador não autorizado"
        "404":
          description: "Utilizador ou item não encontrados"
    delete: 
      tags:
      - "supplier"
      summary: "Remover fornecimento de item"
      description: "Apenas pode ser feito pelo fornecedor userId quando autenticado"
      operationId: "deleteItem"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador que atualmente fornece o item \nDeve corresponder a um utilizador do tipo supplier"
        required: true
        type: "string"
      - name: "itemId"    
        in: "path"
        description: "productId do produto a deixar de fornecer \nDeve corresponder a um produto atualmente fornecido pelo utilizador"
        required: true
        type: "string"
      responses:
        "204":
          description: "Produto removido com sucesso"
        "400":
          description: "userId ou productId inválidos"
        "401":
          description: "Utilizador não autorizado"
        "404":
          description: "Utilizador ou produto não encontrados"
## WAREHOUSES
  /supplier/{userId}/warehouses:
    get:
      tags:
      - "supplier"
      summary: "Obter todos os armazéns associados ao fornecedor"
      description: "Devolve um array de objetos Warehouse, conforme os armazéns registados pelo fornecedor userId \nApenas pode ser feito pelo fornecedor quando autenticado, ou por um administrador"
      operationId: "getWarehouses"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do fornecedor cujos armazéns se deseja obter"
        required: true
        type: "string"
      responses:
        "200":
          description: "Operação efetuada com sucesso"
          schema:
            $ref: "#/definitions/Warehouse"
        "400":
          description: "userId inválido"
        "404":
          description: "Utilizador não encontrado"
    post:
      tags:
      - "supplier"
      summary: "Adicionar armazém"
      description: "Permite adicionar um novo armazém à coleção de armazéns do fornecedor \nApenas pode ser feito pelo fornecedor quando autenticado"
      operationId: "addWarehouse"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do fornecedor ao qual se vai adicionar um novo armazém"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Cria um objeto Warehouse, adicionando-o à coleção de armazéns do fornecedor"
        required: true
        schema:
          $ref: "#/definitions/Warehouse"
      responses:
        "201":
          description: "Operação efetuada com sucesso"
        "400":
          description: "Dados inválidos"
        "401":
          description: "Utilizador não autorizado"
  /supplier/{userId}/warehouses/{warehouseId}:
    get:
      tags:
      - "supplier"
      summary: "Obter informação sobre um armazém warehouseId do fornecedor userId"
      description: "Devolve um objeto Warehouse, representando o armazém warehouseId e todos os seus detalhes"
      operationId: "getWarehouseById"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador cuja informação se deseja saber \nDeve corresponder a um utilizador do tipo supplier"
        required: true
        type: "string"
      - name: "warehouseId"    
        in: "path"
        description: "warehouseId do armazém cuja informação se deseja saber \nDeve corresponder a um armazém associado ao utilizador userId"
        required: true
        type: "string"
      responses:
        "200":
          description: "Operação efetuada com sucesso"
          schema:
            $ref: "#/definitions/Warehouse"
        "400":
          description: "userId ou warehouseId inválidos"
        "404":
          description: "Utilizador ou armazém não encontrados"
    put:
      tags:
      - "supplier"
      summary: "Atualizar armazém"
      description: "Permite atualizar os detalhes de um armazém associado ao fornecedor \nApenas pode ser feito pelo fornecedor userId quando autenticado"
      operationId: "updateWarehouse"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador associado ao armazém \nDeve corresponder a um utilizador do tipo supplier"
        required: true
        type: "string"
      - name: "warehouseId"    
        in: "path"
        description: "warehouseId do armazém a ser atualizado \nDeve corresponder a um armazém associado ao utilizador userId"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Atualiza o objeto Warehouse"
        required: true
        schema:
          $ref: "#/definitions/Warehouse"
      responses:
        "204":
          description: "Armazém atualizado com sucesso"
        "400":
          description: "userId ou warehouseId inválidos"
        "401":
          description: "Utilizador não autorizado"
        "404":
          description: "Utilizador ou armazém não encontrados"
    delete:
      tags:
      - "supplier"
      summary: "Remover armazém"
      description: "Permite remover um armazém da coleção de armazéns do fornecedor \nApenas pode ser feito pelo fornecedor userId quando autenticado"
      operationId: "deleteWarehouse"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "userId do utilizador associado ao armazém \nDeve corresponder a um utilizador do tipo supplier"
        required: true
        type: "string"
      - name: "warehouseId"    
        in: "path"
        description: "warehouseId do armazém a ser removido \nDeve corresponder a um armazém associado ao utilizador userId"
        required: true
        type: "string"
      responses:
        "204":
          description: "Armazém removido com sucesso"
        "400":
          description: "userId ou warehouseId inválidos"
        "401":
          description: "Utilizador não autorizado"
        "404":
          description: "Utilizador ou armazém não encontrados"
  
definitions:
### USER DEF
  SentUser:
    type: "object"
    description: "Objeto utilizado para devolver informação sobre um utilizador"
    properties:
      nif:
        type: "integer"
        description: "Número de identificação fiscal do utilizador"
      first_name:
        type: "string"
        description: "Nome do utilizador"
      last_name:
        type: "string"
        description: "Apelido do utilizador"
      email:
        type: "string"
        description: "E-mail do utilizador"
      phone:
        type: "string"
        description: "Número de telefone do utilizador"
      type:
        type: "string"
        enum:
          - "ADMINISTRATOR"
          - "CONSUMER"
          - "SUPPLIER"
          - "TRANSPORTER"
      address:
        $ref: '#/definitions/Address'
      company:
        $ref: '#/definitions/SentCompany'
  ReceivedUser:
    type: "object"
    description: "Exemplo de objeto de retorno que inclui a informação do utilizador"
    properties:
      id:
        type: "integer"
        description: "Código identificador do utilizador"
      nif:
        type: "integer"
        description: "Número de identificação fiscal do utilizador"
      first_name:
        type: "string"
        description: "Nome do utilizador"
      last_name:
        type: "string"
        description: "Apelido do utilizador"
      email:
        type: "string"
        description: "E-mail do utilizador"
      phone:
        type: "string"
        description: "Número de telefone do utilizador"
      type:
        type: "string"
        enum:
          - "ADMINISTRATOR"
          - "CONSUMER"
          - "SUPPLIER"
          - "TRANSPORTER"

      address:
        $ref: '#/definitions/Address'
      company:
        $ref: '#/definitions/ReceivedCompany'

  # TODO: Create UpdateUser
  UpdateUser:
    type: "object"
    description: "Objeto utilizado para devolver informação sobre um utilizador"
    properties:
      nif:
        type: "integer"
        description: "Número de identificação fiscal do utilizador"
      first_name:
        type: "string"
        description: "Nome do utilizador"
      last_name:
        type: "string"
        description: "Apelido do utilizador"
      email:
        type: "string"
        description: "E-mail do utilizador"
      phone:
        type: "string"
        description: "Número de telefone do utilizador"
      old_password:
        type: "string"
        description: "A palavra-passe atual do utilizador. Terá que condizer com a palavra-passe atualmente registada para que qualquer alteração restante seja feita (Opcional)"
      new_password:
        type: "string"
        description: "A nova palavra-passe a definir para o utilizador. Este campo apenas é requerido se o campo 'old_password' estiver incluido (Opcional)"
      type:
        type: "string"
        enum:
          - "ADMINISTRATOR"
          - "CONSUMER"
          - "SUPPLIER"
          - "TRANSPORTER"
      address:
        $ref: '#/definitions/Address'

  ReceivedID:
    type: "object"
    description: "Objeto utilizado para devolver o ID de um utilizador acabado de criar"
    properties: 
      id:
        type: "integer"
        description: "O código identificador de um utilizador acabado de criar"
      
  
### COMPANY DEF
  ReceivedCompany:
    type: "object"
    description: "Objeto utilizado para representar informação sobre uma empresa"
    properties:
      id:
        type: "integer"
        description: "Código identificador da empresa"
      name:
        type: "string"
        description: "Nome da empresa"
      bio:
        type: "string"
        description: "Descrição da empresa"
      email:
        type: "string"
        description: "E-mail de contacto da empresa"
  SentCompany:
    type: "object"
    description: "Objeto utilizado para representar informação sobre uma empresa"
    properties:
      name:
        type: "string"
        description: "Nome da empresa"
      bio:
        type: "string"
        description: "Descrição da empresa"
      email:
        type: "string"
        description: "E-mail de contacto da empresa"
### ORDER DEF
  Order:
    type: "object"
    description: "Objeto utilizado para devolver informação sobre uma encomenda"
    properties:
      orderId:
        type: "string"
        description: "Código identificador da encomenda"
      transporterId:
        type: "string"
        description: "Código identificador do transportador"
      vehicleId:
        type: "string"
        description: "Código identificador do veículo"
      status:
        $ref: '#/definitions/OrderStatus'
      userId:
        type: "integer"
        description: "Código identificador da utilizador"
      dateCreated:
        type: "string"
        description: "Data do pedido da encomenda"
      items:
        type: "array"
        description: "Itens pedidos na encomenda"
        items:
          type: "object"
          properties:
            item:
              $ref: '#/definitions/Item'
            quantity:
              type: "integer"
              description: "Quantidade encomendada de um item"
      payment:
        $ref: '#/definitions/Payment'
    xml:
      name: "Order"

### ORDERSTATUS DEF
  OrderStatus:
    type: "string"
    description: "Identificador do estado atual da encomenda"
    enum:
      - "awaiting_payment"
      - "processing"
      - "awaiting_transport"
      - "transit"
      - "complete"
      - "failure"
      - "canceled"
    
  
### PRODUCT DEF
  SentProduct: 
    type: "object"
    description: "Objeto utilizado para enviar informação de criação de um novo produto"
    properties:
      productId:
        type: "string"
        description: "Código identificador do produto"
      name:
        type: "string"
        description: "Nome do produto"
      categories:
        type: "array"
        description: "Categorias associadas ao produto"
        items:
          type: "object"
          properties:
            category:
              $ref: '#/definitions/Category'
      complement:
        type: "string"
        description: "productId do produto que serve de complemento a este"
      items:
        description: "Items vendidos por fornecedores, relativos a este produto"
        type: "array"
        items:
          $ref: "#/definitions/Item"
    xml:
      name: "Product"

  SingleProduct: 
    type: "object"
    description: "Objeto utilizado para devolver informação detalhada sobre um único produto"
    properties:
      id:
        type: "integer"
        description: "O código identificador do produto"
      name:
        type: "string"
        description: "O nome do produto"
      description:
        type: "string"
        description: "A descrição do produto"
      complement_name:
        type: "string"
        description: "O nome de um produto adicional que seja necessário para o uso deste produto (e.g. pilhas)"
      complement_amount:
        type: "integer"
        description: "A quantidade do produto adicional requerido"
      category:
        type: "object"
        properties:
          id:
            type: "string"
            description: "O código identificador da categoria à qual o produto pertence"
          name:
            type: "string"
            description: "O nome da categoria à qual o produto pertence"
      supplies:
        type: "array"
        description: "Informação detalhada sobre o fornecimento de cada fornecedor para cada este produto"
        items:
          type: "object"
          properties:
            warehouse:
              type: "integer"
              description: "Código identificador do armazém em que o produto se encontra"
            quantity:
              type: "integer"
              description: "Quantidade em stock que o fornecedor tem deste produto"
            price:
              type: "number"
              format: "float"
              description: "Preço a que o fornecedor está a vender o produto"
            production_date:
              type: "string"
              description: "String representativo da data a que o produto foi feito"
            expiration_date:
              type: "string"
              description: "String representativo da data de validade do produto"
            supplier: 
              type: "object"
              description: "Informação do fornecedor"
              properties:
                id:
                  type: "integer"
                  description: "Código identificador da empresa do fornecedor"
                name:
                  type: "string"
                  description: "Nome da empresa"
            transporters: 
              description: "Informação sobre todos os transportadores que podem transportar este produto, quando vendido por este fornecedor"
              type: "array"
              items: 
                type: "object"

                properties:
                  id:
                    type: "integer"
                    description: "Código identificador da empresa do fornecedor"
                  name:
                    type: "string"
                    description: "Nome da empresa"
            history:
              description: "Informação histórica sobre a venda deste produto por parte deste fornecedor"
              type: "array"
              items:
                type: "object"
                properties: 
                  moment:
                    type: "string"
                    description: "String representativo do momento a que esta informação histórica corresponde"
                  quantity:
                    type: "integer"
                    description: "Quantidade deste produto em inventário por parte do fornecedor, no momento"
                  price:
                    type: "number"
                    format: "float"
                    description: "Preço a que este fornecedor vendia o produto, no momento"



  Products:
    type: "array"
    description: "Objeto utilizado para devolver informação sobre vários produtos"
    items:
      type: "object"
      properties:
        id:
          type: "integer"
          description: "O código identificador do produto"
        name:
          type: "string"
          description: "O nome do produto"
        description:
          type: "string"
          description: "A descrição do produto"
        complement_name:
          type: "string"
          description: "O nome de um produto adicional que seja necessário para o uso deste produto (e.g. pilhas)"
        complement_amount:
          type: "integer"
          description: "A quantidade do produto adicional requerido"
        category:
          type: "object"
          properties:
            id:
              type: "string"
              description: "O código identificador da categoria à qual o produto pertence"
            name:
              type: "string"
              description: "O nome da categoria à qual o produto pertence"
        lowest_price:
          type: "integer"
          description: "O preço mais baixo a que o produto é vendido, de entre todos os seus fornecedores"
        highest_price:
          type: "integer"
          description: "O preço mais alto a que o produto é vendido, de entre todos os seus fornecedores"

  WishlistProduct:
    type: "object"
    description: "Envio do identificador do produto para a wishlist do utilizador"
    properties:
      id: 
        type: "integer"
        description: "Código identificador do produto"

### CATEGORY DEF
  Category:
    type: "object"
    description: "Objeto utilizado para devolver informação sobre a categoria de um produto"
    properties:
      categoryId:
        type: "string"
        description: "Código identificador da categoria"
      name:
        type: "string"
        description: "Nome da categoria"
      subtype:
        type: "string"
        description: "Subtipo da categoria"
    xml: 
      name: "Category"

### VEHICLE DEF    
  Vehicle:
    type: "object"
    description: "Objeto utilizado para devolver informação sobre um veículo"
    properties:
      vehicleId:
        type: "string"
        description: "Código identificador do veículo"
      centerId:
        type: "string"
        description: "Código identificador da localização da base de veículos"
      resourceType:
        type: "string"
        description: "Tipo de combustível do veículo"
      resourceUsage:
        type: "integer"
        description: "Recursos utilizados, medidos em L/100km de combustível em caso de veículos a combustão e kWh/100km em caso de veículos elétricos"
      averageEmissions: 
        type: "integer"
        description: "Média de emissões do veículo, medida em g/km de CO2"
    xml:
      name: "Vehicle"
    
### ITEM DEF
  Item:
    type: "object"
    description: "Objeto utilizado para devolver informação sobre um item itemId"
    properties:
      itemId:
        type: "string"
        description: "Código identificador do item"
      productId:
        type: "string"
        description: "Código identificador do produto"
      supplierId:
        type: "string"
        description: "Código identificador do fornecedor"
      warehouseId:
        type: "string"
        description: "Código identificador do armazém em que o item está"
      price:
        type: "number"
        description: "Preço a que o item é vendido"
      warehouseStock:
        type: "integer"
        description: "Quantidade do item em inventário no armazém warehouseId"
      productionDate:
        type: "string"
        description: "Data de produção do item"
      expirationDate:
        type: "string"
        description: "Data de validade do item"
      history:
        type: "array"
        description: "Compilação de pontos históricos e respetivos detalhes do item"
        items:
          $ref: '#/definitions/ItemHistory'
    xml:
      name: "Item"
  
### ITEMHISTORY DEF
  ItemHistory:
    type: "object"
    description: "Objeto utilizado para devolver o histórico de um item itemId"
    properties:
      resourceUsage:
        type: "integer"
        description: "Eletricidade utilizada para manter o item, medida em kW/h no ponto histórico"
      nonRenewableResources:
        type: "integer"
        description: "Percentagem de eletricidade utilizada para manter o item oriunda de recursos não-renováveis, no ponto histórico"
      price:
        type: "number"
        description: "Preço no ponto histórico"
      date:
        type: "string"
        description: "Data à qual o ponto histórico se refere"
    xml:
      name: "ItemHistory"
        
### WAREHOUSE DEF
  Warehouse:
    type: "object"
    description: "Objeto utilizado para devolver informações sobre um armazém"
    properties:
      warehouseId:
        type: "string"
        description: "Código identificador do armazém"
      capacity: # Usable space in m^3
        type: "integer"
      address:
          $ref: '#/definitions/Address'
      resourceUsage: # Energy usage in kW/h
        type: "integer"
        description: "Eletricidade utilizada para mantimento, por produto, medida em kW/h"
      nonRenewableResources:
        type: "integer" 
        description: "Percentagem de eletricidade utilizada oriunda de recursos não-renováveis"
      supplies:
        type: "array"
        items:
          $ref: '#/definitions/Item'
    xml:
      name: "Warehouse"        

      
### DISTRIBUTIONCENTER DEF
  DistributionCenter:
    type: "object"
    description: "Objeto utilizado para devolver informações sobre um centro de distribuição"
    properties:
      capacity: # Usable space in m^3
        type: "integer"
        description: "Capacidade de veículos de um centro de distribuição"
      address:
        $ref: '#/definitions/Address'
      vehicles:
        type: "array"
        description: "Informação sobre os veículos que estão no centro de distribuição"
        items:
          $ref: "#/definitions/Vehicle"
    xml:
      name: "DistributionCenter"        
      
### ADDRESS DEF
  Address:
    type: "object"
    description: "Objeto utilizado para devolver a morada"
    properties:
      street:
        type: "string"
        description: "Rua da morada"
      city:
        type: "string"
        description: "Cidade da morada"
      postal_code: 
        type: "string"
        description: "Código postal da morada"
      country:
        type: "string"
        description: "País da morada"
    xml:
      name: "Address"
      
### CART DEF
  Cart:
    type: "object"
    description: "Objeto utilizado para representar o cesto de compras de um utilizador, detalhando cada item incluído e respetiva quantidade"
    properties:
      userId:
        type: "integer"
        description: "Código identificador do utilizador"
      itemList:
        type: "array"
        description: "Itens no cesto de compras"
        items:
          type: "object"
          properties:
            item:
              $ref: '#/definitions/Item'
            quantity:
              type: "integer"
              description: "Quantidade do item"
    xml:
      name: "Cart"

### CARTITEM DEF
  CartItem:
    type: "object"
    description: "Objeto que deverá ser fornecido ao ser colocado no carrinho, especificando o itemId do item e  a respetiva quantidade"
    properties:
      itemId:
        type: "string"
        description: "Código identificador do item"
      quantity:
        type: "integer"
        description: "Quantidade do item"
    xml:
      name: "CartItem"
      

### PAYMENT DEF
  Payment: 
    type: "object"
    description: "Objeto utilizado para devolver informações sobre o pagamento de uma encomenda"
    properties:
      paymentId:
        type: "string"
        description: "Código identificador do pagamento"
      status:
        type: "string"
        description: "Estado do pagamento"
      price:
        type: "number"
        description: "Preço da encomenda"
      paymentType:
        type: "string"
        description: "Tipo de pagamento"
    xml:
      name: "Payment"
  